{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///delegated ./node_modules/three/build/three.module.js from dll-reference vendor","webpack:///external \"vendor\"","webpack:///./src/three-map-controls.js","webpack:///delegated ./node_modules/tape/index.js from dll-reference vendor","webpack:///delegated ./node_modules/webpack/buildin/global.js from dll-reference vendor","webpack:///./src/test.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","vendor","__webpack_exports__","three__WEBPACK_IMPORTED_MODULE_0__","MapControls","EventDispatcher","constructor","camera","domElement","options","super","this","undefined","document","enabled","target","minDistance","maxDistance","enableZoom","zoomSpeed","zoomDampingAlpha","initialZoom","enablePan","keyPanSpeed","panDampingAlpha","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ZOOM","MOUSE","MIDDLE","PAN","assign","isTargetValid","Plane","Sphere","forEach","_c","Error","_mode","target0","clone","position0","position","zoom0","zoom","_mouse","Vector2","_finalTargetDistance","_currentTargetDistance","_changeEvent","type","_startEvent","_endEvent","_STATES","NONE","DOLLY","TOUCH_DOLLY","TOUCH_PAN","_state","_panTarget","Vector3","_panCurrent","_minZoomPosition","_maxZoomPosition","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_camOrientation","_lastMouse","_zoomAlpha","_init","distanceToPoint","_straightDollyTrack","lerpVectors","Math","abs","lookAt","sub","normalize","_updateZoomAlpha","addEventListener","_onContextMenu","bind","_onMouseDown","_onMouseWheel","_onTouchStart","_onTouchEnd","_onTouchMove","_onKeyDown","update","_intersectCameraTarget","intersection","ray","orientation","Ray","normal","multiplyScalar","intersectPlane","subVectors","center","intersectSphere","_updateDollyTrack","getZoomAlpha","reset","copy","updateProjectionMatrix","dispatchEvent","panDelta","oldPanCurrent","lerp","add","v","quat","Quaternion","setFromAxisAngle","setFromMatrixColumn","matrix","x","applyQuaternion","y","dispose","removeEventListener","_onMouseMove","_onMouseUp","zoomToFit","mesh","width","height","geometry","boundingSphere","radius","localToWorld","vFOV","fov","PI","hFOV","atan","tan","aspect","obj_aspect","max","min","diff","damping_alpha","round","intersect","addVectors","_calculateMinZoom","length","_getZoomScale","pow","_panLeft","distance","cameraMatrix","set","_panUp","_pan","deltaX","deltaY","targetDistance","element","body","distanceToPlane","distanceTo","clientHeight","_dollyIn","dollyScale","_cameraOfKnownType","console","warn","_dollyOut","_handleUpdateDollyTrackMouse","event","prevMouse","offsetX","clientWidth","offsetY","equals","rc","Raycaster","setFromCamera","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseUp","cam_pos","map_intersect","_handleMouseWheel","delta","wheelDelta","detail","_handleKeyDown","keyCode","_handleUpdateDollyTrackTouch","centerpoint","dx","touches","pageX","dy","pageY","mouse","_handleTouchStartDolly","sqrt","_handleTouchStartPan","_handleTouchMoveDolly","_handleTouchMovePan","_handleTouchEnd","preventDefault","button","stopPropagation","window","THREE","global","tape","require","default","log","el","createElement","className","innerText","appendChild","onload","PerspectiveCamera","inputEvents","_el","key","listener","controls","defaultOpts","advanceFrames","frames","Array","currentDistance","stub","EventStub","data","mouse_x","mouse_y","raycaster","intersectMouse","mouse_pos","initial_cam_pos","t","fail","e","pass","_init_pos","z","end","ok","cam_vec","getWorldDirection","lastDistance","mousewheel","calculated","max_zoom_pos","clientX","clientY","testPanCalibration","new_x","new_y","mousedown","first_intersect","mousemove","second_intersect","correct_z"],"mappings":"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","file":"test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = (__webpack_require__(1))(68);","module.exports = vendor;","'use strict';\n\n//Alex Pilafian 2016-2019 - sikanrong@gmail.com\n\nimport {Matrix4, Matrix3, Quaternion, Plane, Sphere, EventDispatcher, Vector2, Vector3, Raycaster, Ray, MOUSE} from 'three'\n\nclass MapControls extends EventDispatcher{\n\n        constructor(camera, domElement, options){\n            super();\n\n            this.camera = camera;\n\n            //Object to use for listening for keyboard/mouse events\n            this.domElement = ( domElement !== undefined ) ? domElement : document;\n\n            // Set to false to disable this control (Disables all input events)\n            this.enabled = true;\n\n            // Must be set to instance of Plane or Sphere\n            this.target;\n\n            // How far you can dolly in and out\n            this.minDistance = 1; //probably should never be 0\n            this.maxDistance = 100;\n\n            // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n            // Set to false to disable zooming\n            this.enableZoom = true;\n            this.zoomSpeed = 6.0;\n            this.zoomDampingAlpha = 0.1;\n            this.initialZoom = 0; //start zoomed all the way out unless set in options.\n\n            // Set to false to disable panning\n            this.enablePan = true;\n            this.keyPanSpeed = 12.0;\t// pixels moved per arrow key push\n            this.panDampingAlpha = 0.1;\n\n            // Set to false to disable use of the keys\n            this.enableKeys = true;\n\n            // The four arrow keys\n            this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n            // Mouse buttons\n            this.mouseButtons = { ZOOM: MOUSE.MIDDLE, PAN: MOUSE.LEFT };\n\n            //Copy options from parameters\n            Object.assign(this, options);\n\n            let isTargetValid = false;\n            [Plane, Sphere].forEach((_c) => {\n                if(this.target instanceof _c){\n                    isTargetValid = true;\n                }\n            });\n\n            if(!isTargetValid){\n                throw new Error('target must be an instance of type Plane or Sphere');\n            }\n\n            this._mode = (this.target instanceof Plane)? 'plane' : 'sphere';\n\n\n            // for reset\n            this.target0 = this.target.clone();\n            this.position0 = this.camera.position.clone();\n            this.zoom0 = this.camera.zoom;\n\n            this._mouse = new Vector2();\n\n            this._finalTargetDistance;\n            this._currentTargetDistance;\n\n            this._changeEvent = { type: 'change' };\n            this._startEvent = { type: 'start' };\n            this._endEvent = { type: 'end' };\n\n            this._STATES = { NONE : - 1, DOLLY : 1, PAN : 2, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n            this._state = this._STATES.NONE;\n\n            this._panTarget = new Vector3();\n            this._panCurrent = new Vector3();\n\n            this._minZoomPosition = new Vector3();\n            this._maxZoomPosition = new Vector3();\n\n            this._panStart = new Vector2();\n            this._panEnd = new Vector2();\n            this._panDelta = new Vector2();\n\n            this._dollyStart = new Vector2();\n            this._dollyEnd = new Vector2();\n            this._dollyDelta = new Vector2();\n\n            this._camOrientation = new Vector2();\n            this._lastMouse = new Vector2();\n\n            this._zoomAlpha;\n\n            this._init();\n        }\n\n        _init (){\n            if(this.target.distanceToPoint(this.camera.position) == 0){\n                throw new Error(\"ORIENTATION_UNKNOWABLE: initial Camera position cannot intersect target plane.\");\n            }\n\n            //establish initial camera orientation based on position w.r.t. _this.target plane\n            this._straightDollyTrack();\n\n            this.camera.position.lerpVectors(this._minZoomPosition, this._maxZoomPosition, this.initialZoom);\n            this._finalTargetDistance = this._currentTargetDistance = Math.abs(this.target.distanceToPoint(this.camera.position));\n\n            this.camera.lookAt(this._maxZoomPosition); //set the orientation of the camera towards the map.\n            this._camOrientation = this._maxZoomPosition.clone().sub(this.camera.position).normalize();\n\n            this._updateZoomAlpha();\n\n            //Assign event listeners\n\n            this.domElement.addEventListener( 'contextmenu', this._onContextMenu.bind(this), false );\n\n            this.domElement.addEventListener( 'mousedown', this._onMouseDown.bind(this), false );\n            this.domElement.addEventListener( 'mousewheel', this._onMouseWheel.bind(this), false );\n            this.domElement.addEventListener( 'MozMousePixelScroll', this._onMouseWheel.bind(this), false ); // firefox\n\n            this.domElement.addEventListener( 'touchstart', this._onTouchStart.bind(this), false );\n            this.domElement.addEventListener( 'touchend', this._onTouchEnd.bind(this), false );\n            this.domElement.addEventListener( 'touchmove', this._onTouchMove.bind(this), false );\n\n            this.domElement.addEventListener( 'keydown', this._onKeyDown.bind(this), false );\n\n\n            this.update();\n        }\n\n        _intersectCameraTarget(){\n            let intersection, ray;\n\n            switch(this._mode){\n                case 'plane':\n                    [-1, 1].forEach((orientation) => {\n                        if(intersection)\n                            return;\n\n                        ray = new Ray(this.camera.position, this.target.normal.clone().multiplyScalar(orientation));\n                        intersection = ray.intersectPlane(this.target);\n                    });\n                    break;\n                case 'sphere':\n                    ray = new Ray(this.camera.position, (new Vector3()).subVectors(this.target.center, this.camera.position));\n                    intersection = ray.intersectSphere(this.target);\n                    break;\n            }\n\n            return {\n                intersection: intersection,\n                ray: ray\n            }\n        }\n\n        _straightDollyTrack(){\n            this._updateDollyTrack(this._intersectCameraTarget().ray);\n        }\n\n        getZoomAlpha () {\n            return this._zoomAlpha;\n        }\n\n        reset () {\n\n            this.target.copy( this.target0 );\n            this.camera.position.copy( this.position0 );\n            this.camera.zoom = this.zoom0;\n\n            this.camera.updateProjectionMatrix();\n\n            this._init(); //reinit\n\n            this.dispatchEvent( this._changeEvent );\n\n            this.update();\n\n            this._state = this._STATES.NONE;\n\n        };\n\n        // this method is exposed, but perhaps it would be better if we can make it private...\n        update () {\n            var panDelta = new Vector3();\n            var oldPanCurrent = new Vector3();\n            var position = this.camera.position;\n\n            // move target to panned location\n            oldPanCurrent.copy(this._panCurrent);\n            this._panCurrent.lerp( this._panTarget, this.panDampingAlpha );\n            panDelta.subVectors(this._panCurrent, oldPanCurrent);\n\n            switch (this._mode) {\n                case 'plane':\n                    this._maxZoomPosition.add(panDelta);\n                    this._minZoomPosition.add(panDelta);\n                    break;\n                case 'sphere':\n                    const v = new Vector3();\n                    const quat = new Quaternion();\n\n                    quat.setFromAxisAngle(v.setFromMatrixColumn( this.camera.matrix, 1 ), panDelta.x);\n\n                    this._maxZoomPosition.applyQuaternion(quat);\n                    this._minZoomPosition.applyQuaternion(quat);\n\n                    quat.setFromAxisAngle(v.setFromMatrixColumn( this.camera.matrix, 0 ), panDelta.y);\n\n                    this._maxZoomPosition.applyQuaternion(quat);\n                    this._minZoomPosition.applyQuaternion(quat);\n\n                    break;\n            }\n\n            position.lerpVectors(this._minZoomPosition, this._maxZoomPosition, this._updateZoomAlpha());\n\n            if(this._mode == 'sphere'){\n                this.camera.lookAt(this.target.center);\n            }\n        }\n\n        dispose () {\n            this.domElement.removeEventListener( 'contextmenu', this._onContextMenu, false );\n            this.domElement.removeEventListener( 'mousedown', this._onMouseDown, false );\n            this.domElement.removeEventListener( 'mousewheel', this._onMouseWheel, false );\n            this.domElement.removeEventListener( 'MozMousePixelScroll', this._onMouseWheel, false ); // firefox\n\n            this.domElement.removeEventListener( 'touchstart', this._onTouchStart, false );\n            this.domElement.removeEventListener( 'touchend', this._onTouchEnd, false );\n            this.domElement.removeEventListener( 'touchmove', this._onTouchMove, false );\n\n            document.removeEventListener( 'mousemove', this._onMouseMove, false );\n            document.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n            this.domElement.removeEventListener( 'keydown', this._onKeyDown, false );\n        };\n\n        zoomToFit (mesh, center, width, height){\n            //if only width is passed interpret it as radius and set height equal to width\n            center = center || mesh.geometry.boundingSphere.center;\n            width = width || (mesh.geometry.boundingSphere.radius * 2);\n\n            if(height === undefined)\n                height = width;\n\n            this._panTarget.copy(mesh.localToWorld(center.clone()));\n            this._panCurrent.copy(this._intersectCameraTarget().intersection);\n\n            this._straightDollyTrack();\n\n            var vFOV = this.camera.fov * (Math.PI / 180);\n            var hFOV = 2 * Math.atan( Math.tan( vFOV / 2 ) * this.camera.aspect );\n            var obj_aspect = width / height;\n\n            this._finalTargetDistance = ((((obj_aspect > this.camera.aspect)? width : height) / 2) / Math.tan(((obj_aspect > this.camera.aspect)? hFOV : vFOV) / 2));\n\n\n        };\n\n        _updateZoomAlpha(){\n            this._finalTargetDistance = Math.max( this.minDistance, Math.min( this.maxDistance, this._finalTargetDistance ) );\n            var diff = this._currentTargetDistance - this._finalTargetDistance;\n            var damping_alpha = this.zoomDampingAlpha;\n            this._currentTargetDistance -= diff * damping_alpha;\n            var rounding_places = 100000;\n            this._zoomAlpha = Math.abs(Math.round((1 - ((this._currentTargetDistance - this.minDistance) / (this.maxDistance - this.minDistance))) * rounding_places ) / rounding_places);\n\n            return this._zoomAlpha;\n        }\n\n        _updateDollyTrack(ray){\n            let intersect;\n\n            switch(this._mode){\n                case 'plane':\n                    intersect = ray.intersectPlane(this.target);\n                    break;\n                case 'sphere':\n                    intersect = ray.intersectSphere(this.target);\n                    break;\n            }\n\n            if(intersect){\n                this._maxZoomPosition.addVectors(intersect, new Vector3().subVectors(this.camera.position, intersect).normalize().multiplyScalar(this.minDistance));\n                this._minZoomPosition.copy(this._calculateMinZoom(this.camera.position, intersect));\n\n                this._finalTargetDistance = this._currentTargetDistance = intersect.clone().sub(this.camera.position).length();\n            }\n        }\n\n        _getZoomScale() {\n            return Math.pow( 0.95, this.zoomSpeed );\n        }\n\n\n        _panLeft( distance, cameraMatrix ) {\n            var v = new Vector3();\n\n            switch(this._mode){\n                case 'sphere':\n                    v.set(- distance, 0, 0);\n                    break;\n                case 'plane':\n                    v.setFromMatrixColumn( cameraMatrix, 0 ); // get Y column of cameraMatrix\n                    v.multiplyScalar( - distance );\n                    break;\n            }\n\n            this._panTarget.add( v );\n        }\n\n        _panUp ( distance, cameraMatrix ) {\n            var v = new Vector3();\n\n            switch(this._mode){\n                case 'sphere':\n                    v.set(0, - distance, 0);\n                    break;\n                case 'plane':\n                    v.setFromMatrixColumn( cameraMatrix, 1 ); // get Y column of cameraMatrix\n                    v.multiplyScalar( distance );\n                    break;\n            }\n\n            this._panTarget.add( v );\n        }\n\n        // deltaX and deltaY are in pixels; right and down are positive\n        _pan (deltaX, deltaY) {\n\n            var element = this.domElement === document ? this.domElement.body : this.domElement;\n\n            var r = new Ray(this.camera.position, this._camOrientation);\n            var targetDistance;\n            switch(this._mode){\n                case 'plane':\n                    targetDistance = r.distanceToPlane(this.target);\n                    break;\n                case 'sphere':\n                    targetDistance = this.camera.position.distanceTo(this._maxZoomPosition);\n                    break;\n            }\n\n            // half of the fov is center to top of screen\n            targetDistance *= Math.tan( ( this.camera.fov / 2 ) * Math.PI / 180.0 );\n\n            // we actually don't use screenWidth, since perspective camera is fixed to screen height\n            this._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.camera.matrix );\n            this._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.camera.matrix );\n\n        }\n\n        _dollyIn( dollyScale ) {\n            if ( this._cameraOfKnownType() ) {\n                this._finalTargetDistance /= dollyScale;\n            } else {\n                console.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n                this.enableZoom = false;\n            }\n        }\n\n        _dollyOut( dollyScale ) {\n            if ( this._cameraOfKnownType() ) {\n                this._finalTargetDistance *= dollyScale;\n            } else {\n                console.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n                this.enableZoom = false;\n            }\n        }\n\n        _cameraOfKnownType() {\n            return this.camera.type === 'PerspectiveCamera'\n        }\n\n        _handleUpdateDollyTrackMouse(event){\n            var prevMouse = this._mouse.clone();\n            this._mouse.set(( event.offsetX / this.domElement.clientWidth ) * 2 - 1, - ( event.offsetY / this.domElement.clientHeight ) * 2 + 1);\n\n            if(!prevMouse.equals(this._mouse)){\n                var rc = new Raycaster();\n                rc.setFromCamera(this._mouse, this.camera);\n                this._updateDollyTrack(rc.ray);\n            }\n        }\n\n        _handleMouseDownDolly( event ) {\n            this._handleUpdateDollyTrackMouse(event);\n            this._dollyStart.set( event.offsetX, event.offsetY );\n        }\n\n        _handleMouseDownPan( event ) {\n\n            this._panStart.set( event.offsetX, event.offsetY );\n\n        }\n\n        _handleMouseMoveDolly( event ) {\n\n            this._handleUpdateDollyTrackMouse(event);\n\n            //console.log( 'handleMouseMoveDolly' );\n\n            this._dollyEnd.set( event.offsetX, event.offsetY );\n\n            this._dollyDelta.subVectors(this._dollyEnd, this._dollyStart );\n\n            if ( this._dollyDelta.y > 0 ) {\n\n                this._dollyIn( this._getZoomScale() );\n\n            } else if ( this._dollyDelta.y < 0 ) {\n\n                this._dollyOut( this._getZoomScale() );\n\n            }\n\n            this._dollyStart.copy( this._dollyEnd );\n\n            this.update();\n\n        }\n\n        _handleMouseMovePan( event ) {\n\n            //console.log( 'handleMouseMovePan' );\n\n            this._panEnd.set( event.offsetX, event.offsetY );\n\n            this._panDelta.subVectors( this._panEnd, this._panStart );\n\n            this._pan( this._panDelta.x, this._panDelta.y );\n\n            this._panStart.copy( this._panEnd );\n\n            this.update();\n\n        }\n\n        _handleMouseUp( event ) {\n\n            //console.log( 'handleMouseUp' );\n\n        }\n\n        _calculateMinZoom(cam_pos, map_intersect){\n            return map_intersect.clone().add(\n                cam_pos.clone()\n                .sub(map_intersect)\n                .normalize()\n                .multiplyScalar(this.maxDistance)\n            );\n        }\n\n\n        _handleMouseWheel( event ) {\n            this._handleUpdateDollyTrackMouse(event);\n\n            var delta = 0;\n\n            if ( event.wheelDelta !== undefined ) {\n\n                // WebKit / Opera / Explorer 9\n\n                delta = event.wheelDelta;\n\n            } else if ( event.detail !== undefined ) {\n\n                // Firefox\n\n                delta = - event.detail;\n\n            }\n\n            if ( delta > 0 ) {\n                this._dollyOut( this._getZoomScale() );\n            } else if ( delta < 0 ) {\n                this._dollyIn( this._getZoomScale() );\n            }\n\n            this.update();\n        }\n\n        _handleKeyDown( event ) {\n\n            //console.log( 'handleKeyDown' );\n\n            switch ( event.keyCode ) {\n\n                case this.keys.UP:\n                    this._pan( 0, this.keyPanSpeed );\n                    this.update();\n                    break;\n\n                case this.keys.BOTTOM:\n                    this._pan( 0, - this.keyPanSpeed );\n                    this.update();\n                    break;\n\n                case this.keys.LEFT:\n                    this._pan( this.keyPanSpeed, 0 );\n                    this.update();\n                    break;\n\n                case this.keys.RIGHT:\n                    this._pan( - this.keyPanSpeed, 0 );\n                    this.update();\n                    break;\n\n            }\n        }\n\n        _handleUpdateDollyTrackTouch( event ){\n            var centerpoint = new Vector2();\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            centerpoint.x = event.touches[ 0 ].pageX + (dx / 2);\n            centerpoint.y = event.touches[ 0 ].pageY + (dy / 2);\n\n            var mouse = new Vector2();\n            mouse.x = ( centerpoint.x / domElement.clientWidth ) * 2 - 1;\n            mouse.y = - ( centerpoint.y / domElement.clientHeight ) * 2 + 1;\n\n            this._updateDollyTrack(mouse);\n        }\n\n        _handleTouchStartDolly( event ) {\n            this._handleUpdateDollyTrackTouch(event);\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            var distance = Math.sqrt( dx * dx + dy * dy );\n\n            this._dollyStart.set( 0, distance );\n\n        }\n\n        _handleTouchStartPan( event ) {\n\n            //console.log( 'handleTouchStartPan' );\n\n            this._panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n        }\n\n\n        _handleTouchMoveDolly( event ) {\n            this._handleUpdateDollyTrackTouch(event);\n\n            //console.log( 'handleTouchMoveDolly' );\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            var distance = Math.sqrt( dx * dx + dy * dy );\n\n            this._dollyEnd.set( 0, distance );\n\n            this._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n            if ( this._dollyDelta.y > 0 ) {\n\n                this._dollyOut( this._getZoomScale() );\n\n            } else if ( this._dollyDelta.y < 0 ) {\n\n                this._dollyIn( this._getZoomScale() );\n\n            }\n\n            this._dollyStart.copy( this._dollyEnd );\n\n            this.update();\n\n        }\n\n        _handleTouchMovePan( event ) {\n\n            this._panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n            this._panDelta.subVectors( this._panEnd, this._panStart );\n\n            this._pan( this._panDelta.x, this._panDelta.y );\n\n            this._panStart.copy( this._panEnd );\n\n            this.update();\n\n        }\n\n        _handleTouchEnd( event ) {\n            //console.log( 'handleTouchEnd' );\n        }\n\n        //\n        // event handlers - FSM: listen for events and reset state\n        //\n\n        _onMouseDown( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n\n            if ( event.button === this.mouseButtons.ZOOM ) {\n\n                if ( this.enableZoom === false ) return;\n\n                this._handleMouseDownDolly( event );\n\n                this._state = this._STATES.DOLLY;\n\n            } else if ( event.button === this.mouseButtons.PAN ) {\n\n                if ( this.enablePan === false ) return;\n\n                this._handleMouseDownPan( event );\n\n                this._state = this._STATES.PAN;\n\n            }\n\n            if ( this._state !== this._STATES.NONE ) {\n\n                document.addEventListener( 'mousemove', this._onMouseMove.bind(this), false );\n                document.addEventListener( 'mouseup', this._onMouseUp.bind(this), false );\n\n                this.dispatchEvent( this._startEvent );\n\n            }\n\n        }\n\n        _onMouseMove( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n\n            if ( this._state === this._STATES.DOLLY ) {\n\n                if ( this.enableZoom === false ) return;\n\n                this._handleMouseMoveDolly( event );\n\n            } else if ( this._state === this._STATES.PAN ) {\n\n                if ( this.enablePan === false ) return;\n\n                this._handleMouseMovePan( event );\n            }\n        }\n\n        _onMouseUp( event ) {\n\n            if ( this.enabled === false ) return;\n\n            this._handleMouseUp( event );\n\n            document.removeEventListener( 'mousemove', this._onMouseMove, false );\n            document.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n            this.dispatchEvent( this._endEvent );\n\n            this._state = this._STATES.NONE;\n\n        }\n\n        _onMouseWheel( event ) {\n            if ( this.enabled === false || this.enableZoom === false || ( this._state !== this._STATES.NONE ) ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            this._handleMouseWheel( event );\n\n            this.dispatchEvent( this._startEvent ); // not sure why these are here...\n            this.dispatchEvent( this._endEvent );\n\n        }\n\n        _onKeyDown( event ) {\n\n            if ( this.enabled === false || this.enableKeys === false || this.enablePan === false ) return;\n\n            this._handleKeyDown( event );\n\n        }\n\n        _onTouchStart( event ) {\n\n            if ( this.enabled === false ) return;\n\n            switch ( event.touches.length ) {\n                case 1: // three-fingered touch: pan\n\n                    if ( this.enablePan === false ) return;\n\n                    this._handleTouchStartPan( event );\n\n                    this._state = this._STATES.TOUCH_PAN;\n\n                    break;\n\n                case 2:\t// two-fingered touch: dolly\n\n                    if ( this.enableZoom === false ) return;\n\n                    this._handleTouchStartDolly( event );\n\n                    this._state = this._STATES.TOUCH_DOLLY;\n\n                    break;\n\n                default:\n\n                    this._state = this._STATES.NONE;\n\n            }\n\n            if ( this._state !== this._STATES.NONE ) {\n\n                this.dispatchEvent( this._startEvent );\n\n            }\n\n        }\n\n        _onTouchMove( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            switch ( event.touches.length ) {\n\n                case 1: // one-fingered touch: pan\n                    if ( this.enablePan === false ) return;\n                    if ( this._state !== this._STATES.TOUCH_PAN ) return; // is this needed?...\n\n                    this._handleTouchMovePan( event );\n\n                    break;\n\n                case 2: // two-fingered touch: dolly\n\n                    if ( this.enableZoom === false ) return;\n                    if ( this._state !== this._STATES.TOUCH_DOLLY ) return; // is this needed?...\n\n                    this._handleTouchMoveDolly( event );\n\n                    break;\n\n                default:\n\n                    this._state = this._STATES.NONE;\n\n            }\n\n        }\n\n        _onTouchEnd( event ) {\n\n            if ( this.enabled === false ) return;\n\n            this._handleTouchEnd( event );\n\n            this.dispatchEvent( this._endEvent );\n\n            this._state = this._STATES.NONE;\n\n        }\n\n        _onContextMenu( event ) {\n            event.preventDefault();\n        }\n\n};\n\nif(window && window.THREE){\n    MapControls = MapControls;\n}\n\nexport default MapControls;\n","module.exports = (__webpack_require__(1))(67);","module.exports = (__webpack_require__(1))(3);","'use strict';\n\nvar tape = require('tape');\nvar THREE = require('three');\nvar MapControls = require('../src/three-map-controls.js').default;\n\nconsole.log = function(value){\n    var el = document.createElement(\"div\");\n    el.className = \"log\";\n    el.innerText = value;\n    window.document.body.appendChild(el);\n};\nwindow.onload = function () {\n    var el = document.body;\n\n    var camera = new THREE.PerspectiveCamera(45, el.clientWidth / el.clientHeight, 1, 1000);\n\n    var inputEvents = {};\n    [global.document, el].forEach((_el) => {\n        _el.addEventListener = function(key, listener){\n            inputEvents[key] = listener;\n        };\n        _el.removeEventListener = function(){};\n    });\n\n    var defaultOpts = {\n        target: new THREE.Plane(new THREE.Vector3(0,0,1), 0),\n        minDistance: 2.0,\n        maxDistance: 20\n    };\n\n    var controls;\n\n    function advanceFrames(frames){\n        (new Array(frames)).forEach(function(){\n            controls.update();\n        });\n    };\n\n    function currentDistance(){\n        return Math.abs(controls.target.distanceToPoint(camera.position));\n    };\n\n    var stub = function(){};\n\n    function EventStub(data){\n\n        this.preventDefault = stub;\n        this.stopPropagation = stub;\n\n        return Object.assign(this, data);\n    };\n\n    var mouse_x = 400;\n    var mouse_y = 300;\n    var raycaster = new THREE.Raycaster();\n\n//raycasts the current mouse position and intersects the target plane\n    var intersectMouse = function(){\n        var mouse_pos = new THREE.Vector2(( mouse_x / el.width ) * 2 - 1, - ( mouse_y / el.height ) * 2 + 1); //NDC\n        raycaster.setFromCamera(mouse_pos, controls.camera);\n        return raycaster.ray.intersectPlane(controls.target);\n    };\n\n    var initial_cam_pos = new THREE.Vector3(3,2,-20); //what it should be, used for comparisons\n\n    tape(\"shouldn't allow initialization if camera intersects plane\", function (t) {\n        try{\n            controls = new MapControls( camera, el, defaultOpts );\n            t.fail('controls created where camera intersects target plane');\n        }catch(e){\n            t.pass('camera cannot intersect target plane on init');\n        }\n\n        var _init_pos = initial_cam_pos.clone();\n        _init_pos.z = -1;\n        camera.position.copy(_init_pos);\n\n        try{\n            controls = new MapControls( camera, el, defaultOpts );\n            t.pass('controls created correctly');\n        }catch(e){\n            t.fail('controls not created successfully');\n        }\n\n        t.end();\n    });\n\n    tape('should initialize with cam at controls.maxDistance by default', function(t){\n        var distance = currentDistance();\n        t.equals(distance, controls.maxDistance);\n        t.equals(controls.getZoomAlpha(), controls.initialZoom);\n\n        t.end();\n    });\n\n    tape(\"shouldn't move from initial position if no input received\", function(t){\n        advanceFrames(10);\n        var distance = currentDistance();\n        t.equals(distance, controls.maxDistance);\n        t.ok(initial_cam_pos.equals(controls.camera.position));\n        t.end();\n    });\n\n    tape(\"should automatically orient camera towards plane based on starting position\", function(t){\n        var cam_vec = camera.getWorldDirection();\n        t.ok(cam_vec.equals(controls.target.normal) || cam_vec.multiplyScalar(-1).equals(controls.target.normal));\n        t.end();\n    });\n\n    tape('should lerp camera towards target plane on mousewheel', function (t) {\n        var lastDistance = currentDistance();\n        inputEvents.mousewheel(new EventStub({wheelDelta: 1}));\n        advanceFrames(1000);\n        var distance = currentDistance();\n        var calculated = lastDistance * Math.pow(0.95, controls.zoomSpeed);\n        t.equals(Math.round(calculated * 1000), Math.round(distance * 1000)); //round both to 3rd decimal place for comparison\n        t.end();\n    });\n\n    tape('should stop zooming at minDistance from target plane', function (t) {\n\n        (new Array(20)).forEach(function(){\n            inputEvents.mousewheel(new EventStub({wheelDelta: 1}));\n        });\n\n        advanceFrames(1000);\n        var distance = currentDistance();\n        t.equals(Math.round(controls.minDistance * 1000), Math.round(distance * 1000));\n        t.equals(controls.getZoomAlpha(), 1);\n        t.end();\n\n    });\n\n    tape('reset should revert camera to correct initial position', function(t){\n        controls.reset();\n        t.ok(initial_cam_pos.equals(controls.camera.position));\n        t.end();\n    });\n\n    tape('should zoom into mouse pointer', function(t){ //e.g. should act like maps controls.\n        var intersect = intersectMouse();\n\n        //this is where the camera should end up when all-the-way zoomed\n        var max_zoom_pos = new THREE.Vector3().addVectors(intersect, new THREE.Vector3().subVectors(controls.camera.position, intersect).normalize().multiplyScalar(controls.minDistance));\n\n        (new Array(30)).forEach(function(){\n            inputEvents.mousewheel(new EventStub({\n                wheelDelta: 1,\n                clientX: mouse_x,\n                clientY: mouse_y\n            }));\n        });\n\n        advanceFrames(1000);\n        var tolerance = 0.00001;\n        var delta = Math.abs(new THREE.Vector3().subVectors(max_zoom_pos, controls.camera.position).length());\n\n        t.ok( delta <= tolerance );\n        t.end();\n    });\n\n\n    var testPanCalibration = function(t, new_x, new_y){\n\n        //push mouse button down..\n        inputEvents.mousedown(new EventStub({\n            clientX: mouse_x,\n            clientY: mouse_y,\n            button: controls.mouseButtons.PAN\n        }));\n\n        //record current mouse-target raycast intersection\n        var first_intersect = new THREE.Vector3().subVectors(intersectMouse().multiplyScalar(-1), controls.camera.position);\n\n        //now move mouse...\n        mouse_x = new_x;\n        mouse_y = new_y;\n\n        inputEvents.mousemove(new EventStub({\n            clientX: mouse_x,\n            clientY: mouse_y\n        }));\n\n        advanceFrames(1000);\n\n        //record current mouse-target raycast intersection\n        var second_intersect = new THREE.Vector3().subVectors(intersectMouse().multiplyScalar(-1), controls.camera.position);\n\n        //second_intersect should be the same as first_intersect; e.g. the point in world-space under the mouse should not\n        //have changed during pan operation\n        var tolerance = 0.0001;\n        t.ok(Math.abs(new THREE.Vector3().subVectors(second_intersect, first_intersect).length()) <= tolerance);\n\n    };\n\n    tape('mouse should keep same world coordinates under it during camera pan (pan calibration)', function(t){\n        controls.reset();\n\n        testPanCalibration(t, 400, 500);\n\n        t.end();\n    });\n\n//reset mouse\n    mouse_x = 400;\n    mouse_y = 300;\n\n    tape('initialZoom parameter should set the default cam position correctly', function(t){\n        controls.initialZoom = 0.5;\n        controls.reset();\n\n        var correct_z = initial_cam_pos.z + ((controls.maxDistance - controls.minDistance) / 2);\n        t.equals(controls.camera.position.z, correct_z);\n\n        //try max zoom\n        controls.initialZoom = 1;\n        controls.reset();\n\n        var correct_z = -controls.minDistance;\n        t.equals(controls.camera.position.z, correct_z);\n\n        t.end();\n    });\n\n    tape('pan calibration should hold true when zoomed in', function(t){\n        testPanCalibration(t, 400, 500);\n\n        t.end();\n    });\n};\n"],"sourceRoot":""}