{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///delegated ./node_modules/three/build/three.module.js from dll-reference vendor","webpack:///external \"vendor\"","webpack:///./src/three-map-controls.js","webpack:///./src/demo.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","vendor","__webpack_exports__","three__WEBPACK_IMPORTED_MODULE_0__","MapControls","EventDispatcher","constructor","camera","domElement","options","super","this","undefined","document","enabled","target","minDistance","maxDistance","enableZoom","zoomSpeed","zoomDampingAlpha","initialZoom","enablePan","keyPanSpeed","panDampingAlpha","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ZOOM","MOUSE","MIDDLE","PAN","assign","isTargetValid","mode","Error","normal","constant","center","radius","target0","clone","position0","position","zoom0","zoom","_mouse","Vector2","_finalTargetDistance","_currentTargetDistance","_changeEvent","type","_startEvent","_endEvent","_STATES","NONE","DOLLY","TOUCH_DOLLY","TOUCH_PAN","_state","_panTarget","Vector3","_panCurrent","_minZoomPosition","_maxZoomPosition","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_camOrientation","_lastMouse","_zoomAlpha","_screenWorldXform","Math","tan","fov","PI","_init","distanceToPoint","_straightDollyTrack","lerpVectors","abs","lookAt","sub","normalize","_updateZoomAlpha","addEventListener","_onContextMenu","bind","_onMouseDown","_onMouseWheel","_onTouchStart","_onTouchEnd","_onTouchMove","_onKeyDown","update","_intersectCameraTarget","intersection","ray","forEach","orientation","Ray","multiplyScalar","intersectPlane","subVectors","intersectSphere","_updateDollyTrack","getZoomAlpha","reset","copy","updateProjectionMatrix","dispatchEvent","panDelta","oldPanCurrent","lerp","add","v","quat","Quaternion","setFromAxisAngle","setFromMatrixColumn","matrix","x","applyQuaternion","y","dispose","removeEventListener","_onMouseMove","_onMouseUp","zoomToFit","mesh","width","height","geometry","boundingSphere","localToWorld","vFOV","hFOV","atan","aspect","obj_aspect","targetAreaVisible","vOffset","hOffset","depth","distanceToPlane","length","min","Box2","max","diff","damping_alpha","round","intersect","addVectors","_calculateMinZoom","_getZoomScale","pow","_panLeft","distance","cameraMatrix","set","_panUp","_pan","deltaX","deltaY","targetDistance","element","body","camToTarget","clientHeight","_dollyIn","dollyScale","_cameraOfKnownType","console","warn","_dollyOut","_handleUpdateDollyTrackMouse","event","prevMouse","offsetX","clientWidth","offsetY","equals","rc","Raycaster","setFromCamera","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseUp","cam_pos","map_intersect","_handleMouseWheel","delta","wheelDelta","detail","_handleKeyDown","keyCode","_handleUpdateDollyTrackTouch","centerpoint","dx","touches","pageX","dy","pageY","mouse","_handleTouchStartDolly","sqrt","_handleTouchStartPan","_handleTouchMoveDolly","_handleTouchMovePan","_handleTouchEnd","preventDefault","button","stopPropagation","window","THREE","require","default","demo","container","scene","Scene","renderer","meshes","dims","selectedObject","controls","init","setMode","animate","links","sphere","getElementById","plane","style","display","_m","remove","initSphere","initPlane","PerspectiveCamera","innerWidth","innerHeight","z","Sphere","colors","SphereBufferGeometry","computeBoundingSphere","vertices","getAttribute","array","color","Color","vert","setRGB","push","g","b","addAttribute","Float32BufferAttribute","Float32Array","from","points","Points","PointsMaterial","size","vertexColors","VertexColors","polys","Mesh","MeshBasicMaterial","transparent","opacity","lines","wireframe","Plane","CubeGeometry","material","MeshNormalMaterial","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","appendChild","onWindowResize","_e","pick","zoomTo","setInterval","bbox","log","clientX","clientY","raycaster","intersects","intersectObjects","children","requestAnimationFrame","rotation","render"],"mappings":"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","file":"demo.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = (__webpack_require__(1))(68);","module.exports = vendor;","'use strict';\n\n//Alex Pilafian 2016-2019 - sikanrong@gmail.com\n\nimport {Box2, Quaternion, EventDispatcher, Vector2, Vector3, Raycaster, Ray, MOUSE} from 'three'\n\nclass MapControls extends EventDispatcher{\n\n        constructor(camera, domElement, options){\n            super();\n\n            this.camera = camera;\n\n            //Object to use for listening for keyboard/mouse events\n            this.domElement = ( domElement !== undefined ) ? domElement : document;\n\n            // Set to false to disable this control (Disables all input events)\n            this.enabled = true;\n\n            // Must be set to instance of Plane or Sphere\n            this.target;\n\n            // How far you can dolly in and out\n            this.minDistance = 1; //probably should never be 0\n            this.maxDistance = 100;\n\n            // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n            // Set to false to disable zooming\n            this.enableZoom = true;\n            this.zoomSpeed = 6.0;\n            this.zoomDampingAlpha = 0.1;\n            this.initialZoom = 0; //start zoomed all the way out unless set in options.\n\n            // Set to false to disable panning\n            this.enablePan = true;\n            this.keyPanSpeed = 12.0;\t// pixels moved per arrow key push\n            this.panDampingAlpha = 0.1;\n\n            // Set to false to disable use of the keys\n            this.enableKeys = true;\n\n            // The four arrow keys\n            this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n            // Mouse buttons\n            this.mouseButtons = { ZOOM: MOUSE.MIDDLE, PAN: MOUSE.LEFT };\n            \n            //Copy options from parameters\n            Object.assign(this, options);\n            let isTargetValid = false;\n\n            if(this.mode === undefined){\n                throw new Error('\\'mode\\' option must be set to either \\'plane\\' or \\'sphere\\'');\n            }\n\n            switch(this.mode){\n                case 'plane':\n                    isTargetValid = (this.target.normal !== undefined && this.target.constant !== undefined);\n                    break;\n                case 'sphere':\n                    isTargetValid = (this.target.center !== undefined && this.target.radius !== undefined);\n                    break;\n            }\n\n            if(!isTargetValid){\n                throw new Error('\\'target\\' option must be an instance of type THREE.Plane or THREE.Sphere');\n            }\n\n            // for reset\n            this.target0 = this.target.clone();\n            this.position0 = this.camera.position.clone();\n            this.zoom0 = this.camera.zoom;\n\n            this._mouse = new Vector2();\n\n            this._finalTargetDistance;\n            this._currentTargetDistance;\n\n            this._changeEvent = { type: 'change' };\n            this._startEvent = { type: 'start' };\n            this._endEvent = { type: 'end' };\n\n            this._STATES = { NONE : - 1, DOLLY : 1, PAN : 2, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n            this._state = this._STATES.NONE;\n\n            this._panTarget = new Vector3();\n            this._panCurrent = new Vector3();\n\n            this._minZoomPosition = new Vector3();\n            this._maxZoomPosition = new Vector3();\n\n            this._panStart = new Vector2();\n            this._panEnd = new Vector2();\n            this._panDelta = new Vector2();\n\n            this._dollyStart = new Vector2();\n            this._dollyEnd = new Vector2();\n            this._dollyDelta = new Vector2();\n\n            this._camOrientation = new Vector2();\n            this._lastMouse = new Vector2();\n\n            this._zoomAlpha;\n\n            this._screenWorldXform = Math.tan( ( this.camera.fov / 2 ) * Math.PI / 180.0 );\n\n            this._init();\n        }\n\n        _init (){\n            if(this.target.distanceToPoint(this.camera.position) == 0){\n                throw new Error(\"ORIENTATION_UNKNOWABLE: initial Camera position cannot intersect target plane.\");\n            }\n\n            //establish initial camera orientation based on position w.r.t. _this.target plane\n            this._straightDollyTrack();\n\n            this.camera.position.lerpVectors(this._minZoomPosition, this._maxZoomPosition, this.initialZoom);\n            this._finalTargetDistance = this._currentTargetDistance = Math.abs(this.target.distanceToPoint(this.camera.position));\n\n            this.camera.lookAt(this._maxZoomPosition); //set the orientation of the camera towards the map.\n            this._camOrientation = this._maxZoomPosition.clone().sub(this.camera.position).normalize();\n\n            this._updateZoomAlpha();\n\n            //Assign event listeners\n\n            this.domElement.addEventListener( 'contextmenu', this._onContextMenu.bind(this), false );\n\n            this.domElement.addEventListener( 'mousedown', this._onMouseDown.bind(this), false );\n            this.domElement.addEventListener( 'mousewheel', this._onMouseWheel.bind(this), false );\n            this.domElement.addEventListener( 'MozMousePixelScroll', this._onMouseWheel.bind(this), false ); // firefox\n\n            this.domElement.addEventListener( 'touchstart', this._onTouchStart.bind(this), false );\n            this.domElement.addEventListener( 'touchend', this._onTouchEnd.bind(this), false );\n            this.domElement.addEventListener( 'touchmove', this._onTouchMove.bind(this), false );\n\n            this.domElement.addEventListener( 'keydown', this._onKeyDown.bind(this), false );\n\n\n            this.update();\n        }\n\n        _intersectCameraTarget(){\n            let intersection, ray;\n\n            switch(this.mode){\n                case 'plane':\n                    [-1, 1].forEach((orientation) => {\n                        if(intersection)\n                            return;\n\n                        ray = new Ray(this.camera.position, this.target.normal.clone().multiplyScalar(orientation));\n                        intersection = ray.intersectPlane(this.target);\n                    });\n                    break;\n                case 'sphere':\n                    ray = new Ray(this.camera.position, (new Vector3()).subVectors(this.target.center, this.camera.position));\n                    intersection = ray.intersectSphere(this.target);\n                    break;\n            }\n\n            return {\n                intersection: intersection,\n                ray: ray\n            }\n        }\n\n        _straightDollyTrack(){\n            this._updateDollyTrack(this._intersectCameraTarget().ray);\n        }\n\n        getZoomAlpha () {\n            return this._zoomAlpha;\n        }\n\n        reset () {\n\n            this.target.copy( this.target0 );\n            this.camera.position.copy( this.position0 );\n            this.camera.zoom = this.zoom0;\n\n            this.camera.updateProjectionMatrix();\n\n            this._init(); //reinit\n\n            this.dispatchEvent( this._changeEvent );\n\n            this.update();\n\n            this._state = this._STATES.NONE;\n\n        };\n\n        // this method is exposed, but perhaps it would be better if we can make it private...\n        update () {\n            var panDelta = new Vector3();\n            var oldPanCurrent = new Vector3();\n            var position = this.camera.position;\n\n            // move target to panned location\n            oldPanCurrent.copy(this._panCurrent);\n            this._panCurrent.lerp( this._panTarget, this.panDampingAlpha );\n            panDelta.subVectors(this._panCurrent, oldPanCurrent);\n\n            switch (this.mode) {\n                case 'plane':\n                    this._maxZoomPosition.add(panDelta);\n                    this._minZoomPosition.add(panDelta);\n                    break;\n                case 'sphere':\n                    const v = new Vector3();\n                    const quat = new Quaternion();\n\n                    quat.setFromAxisAngle(v.setFromMatrixColumn( this.camera.matrix, 1 ), panDelta.x);\n\n                    this._maxZoomPosition.applyQuaternion(quat);\n                    this._minZoomPosition.applyQuaternion(quat);\n\n                    quat.setFromAxisAngle(v.setFromMatrixColumn( this.camera.matrix, 0 ), panDelta.y);\n\n                    this._maxZoomPosition.applyQuaternion(quat);\n                    this._minZoomPosition.applyQuaternion(quat);\n\n                    break;\n            }\n\n            position.lerpVectors(this._minZoomPosition, this._maxZoomPosition, this._updateZoomAlpha());\n\n            if(this.mode == 'sphere'){\n                this.camera.lookAt(this.target.center);\n            }\n        }\n\n        dispose () {\n            this.domElement.removeEventListener( 'contextmenu', this._onContextMenu, false );\n            this.domElement.removeEventListener( 'mousedown', this._onMouseDown, false );\n            this.domElement.removeEventListener( 'mousewheel', this._onMouseWheel, false );\n            this.domElement.removeEventListener( 'MozMousePixelScroll', this._onMouseWheel, false ); // firefox\n\n            this.domElement.removeEventListener( 'touchstart', this._onTouchStart, false );\n            this.domElement.removeEventListener( 'touchend', this._onTouchEnd, false );\n            this.domElement.removeEventListener( 'touchmove', this._onTouchMove, false );\n\n            document.removeEventListener( 'mousemove', this._onMouseMove, false );\n            document.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n            this.domElement.removeEventListener( 'keydown', this._onKeyDown, false );\n        };\n\n        zoomToFit (mesh, center, width, height){\n            //if only width is passed interpret it as radius and set height equal to width\n            center = center || mesh.geometry.boundingSphere.center;\n            width = width || (mesh.geometry.boundingSphere.radius * 2);\n\n            if(height === undefined)\n                height = width;\n\n            this._panTarget.copy(mesh.localToWorld(center.clone()));\n            this._panCurrent.copy(this._intersectCameraTarget().intersection);\n\n            this._straightDollyTrack();\n\n            var vFOV = this.camera.fov * (Math.PI / 180);\n            var hFOV = 2 * Math.atan( Math.tan( vFOV / 2 ) * this.camera.aspect );\n            var obj_aspect = width / height;\n\n            this._finalTargetDistance = ((((obj_aspect > this.camera.aspect)? width : height) / 2) / Math.tan(((obj_aspect > this.camera.aspect)? hFOV : vFOV) / 2));\n\n\n        };\n\n        //returns a bounding box denoting the visible target area\n        targetAreaVisible(){\n            let vOffset, hOffset, center;\n\n            switch(this.mode){\n                case 'plane':\n                    var r = new Ray(this.camera.position, this._camOrientation);\n                    var depth = r.distanceToPlane(this.target);\n\n                    center = this.camera.position.clone();\n\n                    vOffset = this._screenWorldXform * depth;\n                    hOffset = vOffset * this.camera.aspect;\n\n                    break;\n                case 'sphere':\n\n                    center = this._panCurrent.clone();\n\n                    const d = ((new Vector3()).subVectors(this.camera.position, this.target.center)).length();\n\n                    vOffset = this._screenWorldXform * ((d / this.target.radius) - 1);\n                    vOffset = Math.min(vOffset, (Math.PI / 2));\n\n                    hOffset = vOffset * this.camera.aspect;\n                    hOffset = Math.min(hOffset, Math.PI);\n\n                    break;\n            };\n\n            return new Box2(\n                new Vector2(center.x - hOffset, center.y - vOffset),\n                new Vector2(center.x + hOffset, center.y + vOffset)\n            );\n        }\n\n        _updateZoomAlpha(){\n            this._finalTargetDistance = Math.max( this.minDistance, Math.min( this.maxDistance, this._finalTargetDistance ) );\n            var diff = this._currentTargetDistance - this._finalTargetDistance;\n            var damping_alpha = this.zoomDampingAlpha;\n            this._currentTargetDistance -= diff * damping_alpha;\n            var rounding_places = 100000;\n            this._zoomAlpha = Math.abs(Math.round((1 - ((this._currentTargetDistance - this.minDistance) / (this.maxDistance - this.minDistance))) * rounding_places ) / rounding_places);\n\n            return this._zoomAlpha;\n        }\n\n        _updateDollyTrack(ray){\n            let intersect;\n\n            switch(this.mode){\n                case 'plane':\n                    intersect = ray.intersectPlane(this.target);\n                    break;\n                case 'sphere':\n                    intersect = ray.intersectSphere(this.target);\n                    break;\n            }\n\n            if(intersect){\n                this._maxZoomPosition.addVectors(intersect, new Vector3().subVectors(this.camera.position, intersect).normalize().multiplyScalar(this.minDistance));\n                this._minZoomPosition.copy(this._calculateMinZoom(this.camera.position, intersect));\n\n                this._finalTargetDistance = this._currentTargetDistance = intersect.clone().sub(this.camera.position).length();\n            }\n        }\n\n        _getZoomScale() {\n            return Math.pow( 0.95, this.zoomSpeed );\n        }\n\n\n        _panLeft( distance, cameraMatrix ) {\n            var v = new Vector3();\n\n            switch(this.mode){\n                case 'sphere':\n                    v.set(- distance, 0, 0);\n                    break;\n                case 'plane':\n                    v.setFromMatrixColumn( cameraMatrix, 0 ); // get Y column of cameraMatrix\n                    v.multiplyScalar( - distance );\n                    break;\n            }\n\n            this._panTarget.add( v );\n        }\n\n        _panUp ( distance, cameraMatrix ) {\n            var v = new Vector3();\n\n            switch(this.mode){\n                case 'sphere':\n                    v.set(0, - distance, 0);\n                    break;\n                case 'plane':\n                    v.setFromMatrixColumn( cameraMatrix, 1 ); // get Y column of cameraMatrix\n                    v.multiplyScalar( distance );\n                    break;\n            }\n\n            this._panTarget.add( v );\n        }\n\n        // deltaX and deltaY are in pixels; right and down are positive\n        _pan (deltaX, deltaY) {\n            var element = this.domElement === document ? this.domElement.body : this.domElement;\n\n            var r = new Ray(this.camera.position, this._camOrientation);\n            var targetDistance;\n\n            switch(this.mode){\n                case 'plane':\n                    targetDistance = this._screenWorldXform * r.distanceToPlane(this.target);\n                    break;\n                case 'sphere':\n                    //in spherical mode the pan coords are saved as radians and used as rotation angles\n                    const camToTarget = (new Vector3()).subVectors(this.camera.position, this.target.center);\n                    targetDistance = this._screenWorldXform * ((camToTarget.length() / this.target.radius) - 1);\n                    break;\n            }\n\n            // we actually don't use screenWidth, since perspective camera is fixed to screen height\n            this._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.camera.matrix );\n            this._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.camera.matrix );\n\n        }\n\n        _dollyIn( dollyScale ) {\n            if ( this._cameraOfKnownType() ) {\n                this._finalTargetDistance /= dollyScale;\n            } else {\n                console.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n                this.enableZoom = false;\n            }\n        }\n\n        _dollyOut( dollyScale ) {\n            if ( this._cameraOfKnownType() ) {\n                this._finalTargetDistance *= dollyScale;\n            } else {\n                console.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n                this.enableZoom = false;\n            }\n        }\n\n        _cameraOfKnownType() {\n            return this.camera.type === 'PerspectiveCamera'\n        }\n\n        _handleUpdateDollyTrackMouse(event){\n            var prevMouse = this._mouse.clone();\n            this._mouse.set(( event.offsetX / this.domElement.clientWidth ) * 2 - 1, - ( event.offsetY / this.domElement.clientHeight ) * 2 + 1);\n\n            if(!prevMouse.equals(this._mouse)){\n                var rc = new Raycaster();\n                rc.setFromCamera(this._mouse, this.camera);\n                this._updateDollyTrack(rc.ray);\n            }\n        }\n\n        _handleMouseDownDolly( event ) {\n            this._handleUpdateDollyTrackMouse(event);\n            this._dollyStart.set( event.offsetX, event.offsetY );\n        }\n\n        _handleMouseDownPan( event ) {\n\n            this._panStart.set( event.offsetX, event.offsetY );\n\n        }\n\n        _handleMouseMoveDolly( event ) {\n\n            this._handleUpdateDollyTrackMouse(event);\n\n            //console.log( 'handleMouseMoveDolly' );\n\n            this._dollyEnd.set( event.offsetX, event.offsetY );\n\n            this._dollyDelta.subVectors(this._dollyEnd, this._dollyStart );\n\n            if ( this._dollyDelta.y > 0 ) {\n\n                this._dollyIn( this._getZoomScale() );\n\n            } else if ( this._dollyDelta.y < 0 ) {\n\n                this._dollyOut( this._getZoomScale() );\n\n            }\n\n            this._dollyStart.copy( this._dollyEnd );\n\n            this.update();\n\n        }\n\n        _handleMouseMovePan( event ) {\n\n            //console.log( 'handleMouseMovePan' );\n\n            this._panEnd.set( event.offsetX, event.offsetY );\n\n            this._panDelta.subVectors( this._panEnd, this._panStart );\n\n            this._pan( this._panDelta.x, this._panDelta.y );\n\n            this._panStart.copy( this._panEnd );\n\n            this.update();\n\n        }\n\n        _handleMouseUp( event ) {\n\n            //console.log( 'handleMouseUp' );\n\n        }\n\n        _calculateMinZoom(cam_pos, map_intersect){\n            return map_intersect.clone().add(\n                cam_pos.clone()\n                .sub(map_intersect)\n                .normalize()\n                .multiplyScalar(this.maxDistance)\n            );\n        }\n\n\n        _handleMouseWheel( event ) {\n            this._handleUpdateDollyTrackMouse(event);\n\n            var delta = 0;\n\n            if ( event.wheelDelta !== undefined ) {\n\n                // WebKit / Opera / Explorer 9\n\n                delta = event.wheelDelta;\n\n            } else if ( event.detail !== undefined ) {\n\n                // Firefox\n\n                delta = - event.detail;\n\n            }\n\n            if ( delta > 0 ) {\n                this._dollyOut( this._getZoomScale() );\n            } else if ( delta < 0 ) {\n                this._dollyIn( this._getZoomScale() );\n            }\n\n            this.update();\n        }\n\n        _handleKeyDown( event ) {\n\n            //console.log( 'handleKeyDown' );\n\n            switch ( event.keyCode ) {\n\n                case this.keys.UP:\n                    this._pan( 0, this.keyPanSpeed );\n                    this.update();\n                    break;\n\n                case this.keys.BOTTOM:\n                    this._pan( 0, - this.keyPanSpeed );\n                    this.update();\n                    break;\n\n                case this.keys.LEFT:\n                    this._pan( this.keyPanSpeed, 0 );\n                    this.update();\n                    break;\n\n                case this.keys.RIGHT:\n                    this._pan( - this.keyPanSpeed, 0 );\n                    this.update();\n                    break;\n\n            }\n        }\n\n        _handleUpdateDollyTrackTouch( event ){\n            var centerpoint = new Vector2();\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            centerpoint.x = event.touches[ 0 ].pageX + (dx / 2);\n            centerpoint.y = event.touches[ 0 ].pageY + (dy / 2);\n\n            var mouse = new Vector2();\n            mouse.x = ( centerpoint.x / domElement.clientWidth ) * 2 - 1;\n            mouse.y = - ( centerpoint.y / domElement.clientHeight ) * 2 + 1;\n\n            this._updateDollyTrack(mouse);\n        }\n\n        _handleTouchStartDolly( event ) {\n            this._handleUpdateDollyTrackTouch(event);\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            var distance = Math.sqrt( dx * dx + dy * dy );\n\n            this._dollyStart.set( 0, distance );\n\n        }\n\n        _handleTouchStartPan( event ) {\n\n            //console.log( 'handleTouchStartPan' );\n\n            this._panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n        }\n\n\n        _handleTouchMoveDolly( event ) {\n            this._handleUpdateDollyTrackTouch(event);\n\n            //console.log( 'handleTouchMoveDolly' );\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            var distance = Math.sqrt( dx * dx + dy * dy );\n\n            this._dollyEnd.set( 0, distance );\n\n            this._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n            if ( this._dollyDelta.y > 0 ) {\n\n                this._dollyOut( this._getZoomScale() );\n\n            } else if ( this._dollyDelta.y < 0 ) {\n\n                this._dollyIn( this._getZoomScale() );\n\n            }\n\n            this._dollyStart.copy( this._dollyEnd );\n\n            this.update();\n\n        }\n\n        _handleTouchMovePan( event ) {\n\n            this._panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n            this._panDelta.subVectors( this._panEnd, this._panStart );\n\n            this._pan( this._panDelta.x, this._panDelta.y );\n\n            this._panStart.copy( this._panEnd );\n\n            this.update();\n\n        }\n\n        _handleTouchEnd( event ) {\n            //console.log( 'handleTouchEnd' );\n        }\n\n        //\n        // event handlers - FSM: listen for events and reset state\n        //\n\n        _onMouseDown( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n\n            if ( event.button === this.mouseButtons.ZOOM ) {\n\n                if ( this.enableZoom === false ) return;\n\n                this._handleMouseDownDolly( event );\n\n                this._state = this._STATES.DOLLY;\n\n            } else if ( event.button === this.mouseButtons.PAN ) {\n\n                if ( this.enablePan === false ) return;\n\n                this._handleMouseDownPan( event );\n\n                this._state = this._STATES.PAN;\n\n            }\n\n            if ( this._state !== this._STATES.NONE ) {\n\n                document.addEventListener( 'mousemove', this._onMouseMove.bind(this), false );\n                document.addEventListener( 'mouseup', this._onMouseUp.bind(this), false );\n\n                this.dispatchEvent( this._startEvent );\n\n            }\n\n        }\n\n        _onMouseMove( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n\n            if ( this._state === this._STATES.DOLLY ) {\n\n                if ( this.enableZoom === false ) return;\n\n                this._handleMouseMoveDolly( event );\n\n            } else if ( this._state === this._STATES.PAN ) {\n\n                if ( this.enablePan === false ) return;\n\n                this._handleMouseMovePan( event );\n            }\n        }\n\n        _onMouseUp( event ) {\n\n            if ( this.enabled === false ) return;\n\n            this._handleMouseUp( event );\n\n            document.removeEventListener( 'mousemove', this._onMouseMove, false );\n            document.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n            this.dispatchEvent( this._endEvent );\n\n            this._state = this._STATES.NONE;\n\n        }\n\n        _onMouseWheel( event ) {\n            if ( this.enabled === false || this.enableZoom === false || ( this._state !== this._STATES.NONE ) ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            this._handleMouseWheel( event );\n\n            this.dispatchEvent( this._startEvent ); // not sure why these are here...\n            this.dispatchEvent( this._endEvent );\n\n        }\n\n        _onKeyDown( event ) {\n\n            if ( this.enabled === false || this.enableKeys === false || this.enablePan === false ) return;\n\n            this._handleKeyDown( event );\n\n        }\n\n        _onTouchStart( event ) {\n\n            if ( this.enabled === false ) return;\n\n            switch ( event.touches.length ) {\n                case 1: // three-fingered touch: pan\n\n                    if ( this.enablePan === false ) return;\n\n                    this._handleTouchStartPan( event );\n\n                    this._state = this._STATES.TOUCH_PAN;\n\n                    break;\n\n                case 2:\t// two-fingered touch: dolly\n\n                    if ( this.enableZoom === false ) return;\n\n                    this._handleTouchStartDolly( event );\n\n                    this._state = this._STATES.TOUCH_DOLLY;\n\n                    break;\n\n                default:\n\n                    this._state = this._STATES.NONE;\n\n            }\n\n            if ( this._state !== this._STATES.NONE ) {\n\n                this.dispatchEvent( this._startEvent );\n\n            }\n\n        }\n\n        _onTouchMove( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            switch ( event.touches.length ) {\n\n                case 1: // one-fingered touch: pan\n                    if ( this.enablePan === false ) return;\n                    if ( this._state !== this._STATES.TOUCH_PAN ) return; // is this needed?...\n\n                    this._handleTouchMovePan( event );\n\n                    break;\n\n                case 2: // two-fingered touch: dolly\n\n                    if ( this.enableZoom === false ) return;\n                    if ( this._state !== this._STATES.TOUCH_DOLLY ) return; // is this needed?...\n\n                    this._handleTouchMoveDolly( event );\n\n                    break;\n\n                default:\n\n                    this._state = this._STATES.NONE;\n\n            }\n\n        }\n\n        _onTouchEnd( event ) {\n\n            if ( this.enabled === false ) return;\n\n            this._handleTouchEnd( event );\n\n            this.dispatchEvent( this._endEvent );\n\n            this._state = this._STATES.NONE;\n\n        }\n\n        _onContextMenu( event ) {\n            event.preventDefault();\n        }\n\n};\n\nif(window && window.THREE){\n    window.THREE.MapControls = MapControls;\n}\n\nexport default MapControls;\n","var THREE = require('three');\nvar MapControls = require('./three-map-controls.js').default || THREE.MapControls;\n\nclass MapControlsDemo {\n    constructor (mode) {\n        this.container = document.body;\n        this.scene = new THREE.Scene();\n        this.renderer = null;\n        this.meshes = [];\n        this.dims = 10;\n        this.selectedObject = null;\n        this.controls;\n        this.mode;\n\n        this.init();\n        this.setMode(mode);\n        this.animate();\n    }\n\n    setMode(mode) {\n        this.mode = mode;\n        const links = {\n            sphere: document.getElementById('sphere-link'),\n            plane: document.getElementById('plane-link')\n        };\n\n        links[this.mode].style.display = 'none';\n        links[(this.mode == 'plane')? 'sphere' : 'plane'].style.display = 'inline-block';\n\n        this.meshes.forEach((_m) => {\n            this.scene.remove(_m);\n        });\n\n        switch(this.mode){\n            case 'sphere':\n                this.initSphere();\n                break;\n            case 'plane':\n                this.initPlane();\n                break;\n        }\n    }\n\n    initSphere(){\n\n        var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 1000 );\n        camera.position.z = 40;\n        const radius = 10;\n        this.controls = new MapControls( camera, this.renderer.domElement, {\n            target: new THREE.Sphere(new THREE.Vector3(0,0,0), radius),\n            mode: 'sphere',\n            minDistance: 1,\n            maxDistance: camera.position.z\n        });\n\n        const colors = [];\n\n        const geometry = new THREE.SphereBufferGeometry(radius, this.dims, this.dims);\n        geometry.computeBoundingSphere();\n\n        const vertices = geometry.getAttribute('position').array;\n        for(var i = 0; i < vertices.length; i += 3){\n            var color = new THREE.Color();\n            var vert = new THREE.Vector3(vertices[i], vertices[i+1], vertices[i+2]);\n\n            color.setRGB(\n                ( vert.x / radius ) + 0.5,\n                ( vert.y / radius ) + 0.5,\n                ( vert.z / radius ) + 0.5\n            );\n\n            colors.push( color.r, color.g, color.b );\n        }\n\n        geometry.addAttribute( 'color', new THREE.Float32BufferAttribute( Float32Array.from(colors), 3 ) );\n\n        const points = new THREE.Points(\n            geometry,\n            new THREE.PointsMaterial( { size: 1, vertexColors: THREE.VertexColors } )\n        );\n\n        this.scene.add( points );\n        this.meshes.push( points );\n\n        const polys = new THREE.Mesh(\n            geometry,\n            new THREE.MeshBasicMaterial({\n                vertexColors: THREE.VertexColors,\n                transparent: true,\n                opacity: 0.2\n\n            })\n        );\n\n        this.meshes.push( polys );\n        this.scene.add( polys );\n\n        const lines = new THREE.Mesh(\n            geometry,\n            new THREE.MeshBasicMaterial({\n                vertexColors: THREE.VertexColors,\n                wireframe: true\n            })\n        );\n\n        this.meshes.push( lines );\n        this.scene.add( lines );\n\n    }\n\n    initPlane(){\n\n        var camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 1000 );\n        camera.position.z = 20;\n        this.controls = new MapControls( camera, this.renderer.domElement, {\n            target: new THREE.Plane(new THREE.Vector3(0,0,1), 0),\n            mode: 'plane',\n            minDistance: 2.0,\n            maxDistance: 20\n        });\n\n        var offset = 3;\n\n        for(var x = 0; x < this.dims; x++){\n            for(var y = 0; y < this.dims; y++){\n                var geometry = new THREE.CubeGeometry(1, 1, 1);\n                var material = new THREE.MeshNormalMaterial();\n\n                var mesh = new THREE.Mesh( geometry, material );\n                mesh.position.x += ((-0.5 * this.dims * offset) + (x * offset));\n                mesh.position.y += ((-0.5 * this.dims * offset) + (y * offset));\n\n                this.meshes.push( mesh );\n                this.scene.add( mesh );\n\n                mesh.geometry.computeBoundingSphere();\n            }\n        }\n    }\n\n    init () {\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n\n        this.container.appendChild( this.renderer.domElement );\n\n        window.addEventListener( 'resize', ()=>{\n            this.onWindowResize();\n        }, false );\n\n        this.renderer.domElement.addEventListener( 'mousedown', (_e) => {this.pick(_e)} );\n        this.renderer.domElement.addEventListener( 'dblclick', (_e) => {this.zoomTo(_e)} );\n\n        setInterval(()=>{\n            var bbox = this.controls.targetAreaVisible();\n            console.log(`(${bbox.min.x}, ${bbox.min.y}, ${bbox.max.x}, ${bbox.max.y})`);\n        }, 1000);\n    }\n\n    zoomTo(){\n        if(!this.selectedObject)\n            return;\n\n        this.controls.zoomToFit(this.selectedObject);\n    }\n\n    pick(event){\n        var mouse = new THREE.Vector2();\n\n        mouse.x = ( event.clientX / this.renderer.domElement.clientWidth ) * 2 - 1;\n        mouse.y = - ( event.clientY / this.renderer.domElement.clientHeight ) * 2 + 1;\n\n        var raycaster = new THREE.Raycaster();\n\n        raycaster.setFromCamera(mouse, this.controls.camera);\n\n        // calculate objects intersecting the picking ray\n        var intersects = raycaster.intersectObjects( this.scene.children, true );\n        if(intersects.length > 0){\n            this.selectedObject = intersects[0].object;\n        }else{\n            this.selectedObject = null;\n        }\n\n    }\n\n    onWindowResize(){\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n        this.controls.camera.aspect = this.renderer.domElement.clientWidth / this.renderer.domElement.clientHeight;\n        this.controls.camera.updateProjectionMatrix();\n        this.renderer.setSize( this.renderer.domElement.clientWidth, this.renderer.domElement.clientHeight );\n    }\n\n    animate(){\n        requestAnimationFrame( () => {\n            this.animate();\n        } );\n\n        if(this.mode == 'plane'){\n            this.meshes.forEach(( mesh ) => {\n                mesh.rotation.x += 0.005;\n                mesh.rotation.y += 0.01;\n            });\n        }\n\n        this.controls.update();\n        this.renderer.render( this.scene, this.controls.camera );\n    }\n};\n\nwindow.addEventListener('load', () => {\n    window.demo = new MapControlsDemo('sphere');\n});"],"sourceRoot":""}