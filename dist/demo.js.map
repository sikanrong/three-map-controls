{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///delegated ./node_modules/three/build/three.module.js from dll-reference vendor","webpack:///external \"vendor\"","webpack:///./src/three-map-controls.js","webpack:///./src/demo.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","vendor","__webpack_exports__","three__WEBPACK_IMPORTED_MODULE_0__","MapControls","EventDispatcher","constructor","camera","domElement","options","super","this","undefined","document","enabled","target","minDistance","maxDistance","enableZoom","zoomSpeed","zoomDampingAlpha","initialZoom","enablePan","keyPanSpeed","panDampingAlpha","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ZOOM","MOUSE","MIDDLE","PAN","panLimits","Box2","assign","isTargetValid","mode","Error","normal","constant","center","radius","target0","clone","position0","position","zoom0","zoom","_mouse","Vector2","_finalTargetDistance","_currentTargetDistance","_changeEvent","type","_startEvent","_endEvent","_STATES","NONE","DOLLY","TOUCH_DOLLY","TOUCH_PAN","_state","_panTarget","Vector3","_panCurrent","_minZoomPosition","_maxZoomPosition","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_camOrientation","_lastMouse","_zoomAlpha","_screenWorldXform","Math","tan","fov","PI","_init","distanceToPoint","min","x","max","y","_straightDollyTrack","lerpVectors","abs","lookAt","sub","normalize","_updateZoomAlpha","addEventListener","_onContextMenu","bind","_onMouseDown","_onMouseWheel","_onTouchStart","_onTouchEnd","_onTouchMove","_onKeyDown","update","_intersectCameraTarget","intersection","ray","forEach","orientation","Ray","multiplyScalar","intersectPlane","subVectors","intersectSphere","_updateDollyTrack","getZoomAlpha","reset","copy","updateProjectionMatrix","dispatchEvent","panDelta","oldPanCurrent","lerp","add","v","quat","Quaternion","setFromAxisAngle","setFromMatrixColumn","matrix","applyQuaternion","dispose","removeEventListener","_onMouseMove","_onMouseUp","zoomToFit","mesh","width","height","geometry","boundingSphere","localToWorld","vFOV","hFOV","atan","aspect","obj_aspect","targetAreaVisible","vOffset","hOffset","depth","distanceToPlane","length","diff","damping_alpha","round","intersect","addVectors","_calculateMinZoom","_getZoomScale","pow","_panLeft","distance","cameraMatrix","set","_panUp","_pan","deltaX","deltaY","targetDistance","element","body","camToTarget","clientHeight","_mm","_rev","_dim","_dollyIn","dollyScale","_cameraOfKnownType","console","warn","_dollyOut","_handleUpdateDollyTrackMouse","event","prevMouse","offsetX","clientWidth","offsetY","equals","rc","Raycaster","setFromCamera","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseUp","cam_pos","map_intersect","_handleMouseWheel","delta","wheelDelta","detail","_handleKeyDown","keyCode","_handleUpdateDollyTrackTouch","centerpoint","dx","touches","pageX","dy","pageY","mouse","_handleTouchStartDolly","sqrt","_handleTouchStartPan","_handleTouchMoveDolly","_handleTouchMovePan","_handleTouchEnd","preventDefault","button","stopPropagation","window","THREE","require","default","demo","container","scene","Scene","renderer","meshes","dims","selectedObject","controls","init","setMode","animate","links","sphere","getElementById","plane","style","display","_m","remove","initSphere","initPlane","PerspectiveCamera","innerWidth","innerHeight","z","Sphere","colors","SphereBufferGeometry","computeBoundingSphere","vertices","getAttribute","array","color","Color","vert","setRGB","push","g","b","addAttribute","Float32BufferAttribute","Float32Array","from","points","Points","PointsMaterial","size","vertexColors","VertexColors","polys","Mesh","MeshBasicMaterial","transparent","opacity","lines","wireframe","Plane","CubeGeometry","material","MeshNormalMaterial","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","appendChild","onWindowResize","_e","pick","zoomTo","setInterval","bbox","log","clientX","clientY","raycaster","intersects","intersectObjects","children","requestAnimationFrame","rotation","render"],"mappings":"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","file":"demo.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = (__webpack_require__(1))(68);","module.exports = vendor;","'use strict';\n\n//Alex Pilafian 2016-2019 - sikanrong@gmail.com\n\nimport {Box2, Quaternion, EventDispatcher, Vector2, Vector3, Raycaster, Ray, MOUSE} from 'three'\n\nclass MapControls extends EventDispatcher{\n\n        constructor(camera, domElement, options){\n            super();\n\n            this.camera = camera;\n\n            //Object to use for listening for keyboard/mouse events\n            this.domElement = ( domElement !== undefined ) ? domElement : document;\n\n            // Set to false to disable this control (Disables all input events)\n            this.enabled = true;\n\n            // Must be set to instance of Plane or Sphere\n            this.target;\n\n            // How far you can dolly in and out\n            this.minDistance = 1; //probably should never be 0\n            this.maxDistance = 100;\n\n            // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n            // Set to false to disable zooming\n            this.enableZoom = true;\n            this.zoomSpeed = 6.0;\n            this.zoomDampingAlpha = 0.1;\n            this.initialZoom = 0; //start zoomed all the way out unless set in options.\n\n            // Set to false to disable panning\n            this.enablePan = true;\n            this.keyPanSpeed = 12.0;\t// pixels moved per arrow key push\n            this.panDampingAlpha = 0.1;\n\n            // Set to false to disable use of the keys\n            this.enableKeys = true;\n\n            // The four arrow keys\n            this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n            // Mouse buttons\n            this.mouseButtons = { ZOOM: MOUSE.MIDDLE, PAN: MOUSE.LEFT };\n\n            this.panLimits = new Box2();\n\n            //Copy options from parameters\n            Object.assign(this, options);\n            let isTargetValid = false;\n\n            if(this.mode === undefined){\n                throw new Error('\\'mode\\' option must be set to either \\'plane\\' or \\'sphere\\'');\n            }\n\n            switch(this.mode){\n                case 'plane':\n                    isTargetValid = (this.target.normal !== undefined && this.target.constant !== undefined);\n                    break;\n                case 'sphere':\n                    isTargetValid = (this.target.center !== undefined && this.target.radius !== undefined);\n                    break;\n            }\n\n            if(!isTargetValid){\n                throw new Error('\\'target\\' option must be an instance of type THREE.Plane or THREE.Sphere');\n            }\n\n            // for reset\n            this.target0 = this.target.clone();\n            this.position0 = this.camera.position.clone();\n            this.zoom0 = this.camera.zoom;\n\n            this._mouse = new Vector2();\n\n            this._finalTargetDistance;\n            this._currentTargetDistance;\n\n            this._changeEvent = { type: 'change' };\n            this._startEvent = { type: 'start' };\n            this._endEvent = { type: 'end' };\n\n            this._STATES = { NONE : - 1, DOLLY : 1, PAN : 2, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n            this._state = this._STATES.NONE;\n\n            this._panTarget = new Vector3();\n            this._panCurrent = new Vector3();\n\n            this._minZoomPosition = new Vector3();\n            this._maxZoomPosition = new Vector3();\n\n            this._panStart = new Vector2();\n            this._panEnd = new Vector2();\n            this._panDelta = new Vector2();\n\n            this._dollyStart = new Vector2();\n            this._dollyEnd = new Vector2();\n            this._dollyDelta = new Vector2();\n\n            this._camOrientation = new Vector2();\n            this._lastMouse = new Vector2();\n\n            this._zoomAlpha;\n\n            this._screenWorldXform = Math.tan( ( this.camera.fov / 2 ) * Math.PI / 180.0 );\n\n            this._init();\n        }\n\n        _init (){\n            if(this.target.distanceToPoint(this.camera.position) == 0){\n                throw new Error(\"ORIENTATION_UNKNOWABLE: initial Camera position cannot intersect target plane.\");\n            }\n\n            if(this.mode == 'sphere'){\n                delete this.panLimits.min.x;\n                delete this.panLimits.max.x;\n                this.panLimits.min.y = -Math.PI/2;\n                this.panLimits.max.y = Math.PI/2;\n            }\n\n            //establish initial camera orientation based on position w.r.t. _this.target plane\n            this._straightDollyTrack();\n\n            this.camera.position.lerpVectors(this._minZoomPosition, this._maxZoomPosition, this.initialZoom);\n            this._finalTargetDistance = this._currentTargetDistance = Math.abs(this.target.distanceToPoint(this.camera.position));\n\n            this.camera.lookAt(this._maxZoomPosition); //set the orientation of the camera towards the map.\n            this._camOrientation = this._maxZoomPosition.clone().sub(this.camera.position).normalize();\n\n            this._updateZoomAlpha();\n\n            //Assign event listeners\n\n            this.domElement.addEventListener( 'contextmenu', this._onContextMenu.bind(this), false );\n\n            this.domElement.addEventListener( 'mousedown', this._onMouseDown.bind(this), false );\n            this.domElement.addEventListener( 'mousewheel', this._onMouseWheel.bind(this), false );\n            this.domElement.addEventListener( 'MozMousePixelScroll', this._onMouseWheel.bind(this), false ); // firefox\n\n            this.domElement.addEventListener( 'touchstart', this._onTouchStart.bind(this), false );\n            this.domElement.addEventListener( 'touchend', this._onTouchEnd.bind(this), false );\n            this.domElement.addEventListener( 'touchmove', this._onTouchMove.bind(this), false );\n\n            this.domElement.addEventListener( 'keydown', this._onKeyDown.bind(this), false );\n\n\n            this.update();\n        }\n\n        _intersectCameraTarget(){\n            let intersection, ray;\n\n            switch(this.mode){\n                case 'plane':\n                    [-1, 1].forEach((orientation) => {\n                        if(intersection)\n                            return;\n\n                        ray = new Ray(this.camera.position, this.target.normal.clone().multiplyScalar(orientation));\n                        intersection = ray.intersectPlane(this.target);\n                    });\n                    break;\n                case 'sphere':\n                    ray = new Ray(this.camera.position, (new Vector3()).subVectors(this.target.center, this.camera.position));\n                    intersection = ray.intersectSphere(this.target);\n                    break;\n            }\n\n            return {\n                intersection: intersection,\n                ray: ray\n            }\n        }\n\n        _straightDollyTrack(){\n            this._updateDollyTrack(this._intersectCameraTarget().ray);\n        }\n\n        getZoomAlpha () {\n            return this._zoomAlpha;\n        }\n\n        reset () {\n\n            this.target.copy( this.target0 );\n            this.camera.position.copy( this.position0 );\n            this.camera.zoom = this.zoom0;\n\n            this.camera.updateProjectionMatrix();\n\n            this._init(); //reinit\n\n            this.dispatchEvent( this._changeEvent );\n\n            this.update();\n\n            this._state = this._STATES.NONE;\n\n        };\n\n        // this method is exposed, but perhaps it would be better if we can make it private...\n        update () {\n            var panDelta = new Vector3();\n            var oldPanCurrent = new Vector3();\n            var position = this.camera.position;\n\n            // move target to panned location\n            oldPanCurrent.copy(this._panCurrent);\n            this._panCurrent.lerp( this._panTarget, this.panDampingAlpha );\n            panDelta.subVectors(this._panCurrent, oldPanCurrent);\n\n            switch (this.mode) {\n                case 'plane':\n                    this._maxZoomPosition.add(panDelta);\n                    this._minZoomPosition.add(panDelta);\n                    break;\n                case 'sphere':\n                    const v = new Vector3();\n                    const quat = new Quaternion();\n\n                    quat.setFromAxisAngle(v.setFromMatrixColumn( this.camera.matrix, 1 ), panDelta.x);\n\n                    this._maxZoomPosition.applyQuaternion(quat);\n                    this._minZoomPosition.applyQuaternion(quat);\n\n                    quat.setFromAxisAngle(v.setFromMatrixColumn( this.camera.matrix, 0 ), panDelta.y);\n\n                    this._maxZoomPosition.applyQuaternion(quat);\n                    this._minZoomPosition.applyQuaternion(quat);\n\n                    break;\n            }\n\n            position.lerpVectors(this._minZoomPosition, this._maxZoomPosition, this._updateZoomAlpha());\n\n            if(this.mode == 'sphere'){\n                this.camera.lookAt(this.target.center);\n            }\n        }\n\n        dispose () {\n            this.domElement.removeEventListener( 'contextmenu', this._onContextMenu, false );\n            this.domElement.removeEventListener( 'mousedown', this._onMouseDown, false );\n            this.domElement.removeEventListener( 'mousewheel', this._onMouseWheel, false );\n            this.domElement.removeEventListener( 'MozMousePixelScroll', this._onMouseWheel, false ); // firefox\n\n            this.domElement.removeEventListener( 'touchstart', this._onTouchStart, false );\n            this.domElement.removeEventListener( 'touchend', this._onTouchEnd, false );\n            this.domElement.removeEventListener( 'touchmove', this._onTouchMove, false );\n\n            document.removeEventListener( 'mousemove', this._onMouseMove, false );\n            document.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n            this.domElement.removeEventListener( 'keydown', this._onKeyDown, false );\n        };\n\n        zoomToFit (mesh, center, width, height){\n            //if only width is passed interpret it as radius and set height equal to width\n            center = center || mesh.geometry.boundingSphere.center;\n            width = width || (mesh.geometry.boundingSphere.radius * 2);\n\n            if(height === undefined)\n                height = width;\n\n            this._panTarget.copy(mesh.localToWorld(center.clone()));\n            this._panCurrent.copy(this._intersectCameraTarget().intersection);\n\n            this._straightDollyTrack();\n\n            var vFOV = this.camera.fov * (Math.PI / 180);\n            var hFOV = 2 * Math.atan( Math.tan( vFOV / 2 ) * this.camera.aspect );\n            var obj_aspect = width / height;\n\n            this._finalTargetDistance = ((((obj_aspect > this.camera.aspect)? width : height) / 2) / Math.tan(((obj_aspect > this.camera.aspect)? hFOV : vFOV) / 2));\n\n\n        };\n\n        //returns a bounding box denoting the visible target area\n        targetAreaVisible(){\n            let vOffset, hOffset, center;\n\n            switch(this.mode){\n                case 'plane':\n                    var r = new Ray(this.camera.position, this._camOrientation);\n                    var depth = r.distanceToPlane(this.target);\n\n                    center = this.camera.position.clone();\n\n                    vOffset = this._screenWorldXform * depth;\n                    hOffset = vOffset * this.camera.aspect;\n\n                    break;\n                case 'sphere':\n\n                    center = this._panCurrent.clone();\n\n                    const d = ((new Vector3()).subVectors(this.camera.position, this.target.center)).length();\n\n                    vOffset = this._screenWorldXform * ((d / this.target.radius) - 1);\n                    vOffset = Math.min(vOffset, (Math.PI / 2));\n\n                    hOffset = vOffset * this.camera.aspect;\n                    hOffset = Math.min(hOffset, Math.PI);\n\n                    break;\n            };\n\n            return new Box2(\n                new Vector2(center.x - hOffset, center.y - vOffset),\n                new Vector2(center.x + hOffset, center.y + vOffset)\n            );\n        }\n\n        _updateZoomAlpha(){\n            this._finalTargetDistance = Math.max( this.minDistance, Math.min( this.maxDistance, this._finalTargetDistance ) );\n            var diff = this._currentTargetDistance - this._finalTargetDistance;\n            var damping_alpha = this.zoomDampingAlpha;\n            this._currentTargetDistance -= diff * damping_alpha;\n            var rounding_places = 100000;\n            this._zoomAlpha = Math.abs(Math.round((1 - ((this._currentTargetDistance - this.minDistance) / (this.maxDistance - this.minDistance))) * rounding_places ) / rounding_places);\n\n            return this._zoomAlpha;\n        }\n\n        _updateDollyTrack(ray){\n            let intersect;\n\n            switch(this.mode){\n                case 'plane':\n                    intersect = ray.intersectPlane(this.target);\n                    break;\n                case 'sphere':\n                    intersect = ray.intersectSphere(this.target);\n                    break;\n            }\n\n            if(intersect){\n                this._maxZoomPosition.addVectors(intersect, new Vector3().subVectors(this.camera.position, intersect).normalize().multiplyScalar(this.minDistance));\n                this._minZoomPosition.copy(this._calculateMinZoom(this.camera.position, intersect));\n\n                this._finalTargetDistance = this._currentTargetDistance = intersect.clone().sub(this.camera.position).length();\n            }\n        }\n\n        _getZoomScale() {\n            return Math.pow( 0.95, this.zoomSpeed );\n        }\n\n\n        _panLeft( distance, cameraMatrix ) {\n            var v = new Vector3();\n\n            switch(this.mode){\n                case 'sphere':\n                    v.set(- distance, 0, 0);\n                    break;\n                case 'plane':\n                    v.setFromMatrixColumn( cameraMatrix, 0 ); // get Y column of cameraMatrix\n                    v.multiplyScalar( - distance );\n                    break;\n            }\n\n            this._panTarget.add( v );\n        }\n\n        _panUp ( distance, cameraMatrix ) {\n            var v = new Vector3();\n\n            switch(this.mode){\n                case 'sphere':\n                    v.set(0, - distance, 0);\n                    break;\n                case 'plane':\n                    v.setFromMatrixColumn( cameraMatrix, 1 ); // get Y column of cameraMatrix\n                    v.multiplyScalar( distance );\n                    break;\n            }\n\n            this._panTarget.add( v );\n        }\n\n        // deltaX and deltaY are in pixels; right and down are positive\n        _pan (deltaX, deltaY) {\n            var element = this.domElement === document ? this.domElement.body : this.domElement;\n\n            var r = new Ray(this.camera.position, this._camOrientation);\n            var targetDistance;\n\n            switch(this.mode){\n                case 'plane':\n                    targetDistance = this._screenWorldXform * r.distanceToPlane(this.target);\n                    break;\n                case 'sphere':\n                    //in spherical mode the pan coords are saved as radians and used as rotation angles\n                    const camToTarget = (new Vector3()).subVectors(this.camera.position, this.target.center);\n                    targetDistance = this._screenWorldXform * ((camToTarget.length() / this.target.radius) - 1);\n                    break;\n            }\n\n            // we actually don't use screenWidth, since perspective camera is fixed to screen height\n            this._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.camera.matrix );\n            this._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.camera.matrix );\n\n            //Apply limits\n            ['min', 'max'].forEach(_mm => {\n                const _rev = (_mm == 'min')? 'max' : 'min';\n\n                ['x', 'y'].forEach(_dim => {\n                    if(this.panLimits[_mm] && this.panLimits[_mm][_dim]){\n                        this._panTarget[_dim] = Math[_rev](this._panTarget[_dim], this.panLimits[_mm][_dim])\n                    }\n                })\n\n            });\n\n        }\n\n        _dollyIn( dollyScale ) {\n            if ( this._cameraOfKnownType() ) {\n                this._finalTargetDistance /= dollyScale;\n            } else {\n                console.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n                this.enableZoom = false;\n            }\n        }\n\n        _dollyOut( dollyScale ) {\n            if ( this._cameraOfKnownType() ) {\n                this._finalTargetDistance *= dollyScale;\n            } else {\n                console.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n                this.enableZoom = false;\n            }\n        }\n\n        _cameraOfKnownType() {\n            return this.camera.type === 'PerspectiveCamera'\n        }\n\n        _handleUpdateDollyTrackMouse(event){\n            var prevMouse = this._mouse.clone();\n            this._mouse.set(( event.offsetX / this.domElement.clientWidth ) * 2 - 1, - ( event.offsetY / this.domElement.clientHeight ) * 2 + 1);\n\n            if(!prevMouse.equals(this._mouse)){\n                var rc = new Raycaster();\n                rc.setFromCamera(this._mouse, this.camera);\n                this._updateDollyTrack(rc.ray);\n            }\n        }\n\n        _handleMouseDownDolly( event ) {\n            this._handleUpdateDollyTrackMouse(event);\n            this._dollyStart.set( event.offsetX, event.offsetY );\n        }\n\n        _handleMouseDownPan( event ) {\n\n            this._panStart.set( event.offsetX, event.offsetY );\n\n        }\n\n        _handleMouseMoveDolly( event ) {\n\n            this._handleUpdateDollyTrackMouse(event);\n\n            //console.log( 'handleMouseMoveDolly' );\n\n            this._dollyEnd.set( event.offsetX, event.offsetY );\n\n            this._dollyDelta.subVectors(this._dollyEnd, this._dollyStart );\n\n            if ( this._dollyDelta.y > 0 ) {\n\n                this._dollyIn( this._getZoomScale() );\n\n            } else if ( this._dollyDelta.y < 0 ) {\n\n                this._dollyOut( this._getZoomScale() );\n\n            }\n\n            this._dollyStart.copy( this._dollyEnd );\n\n            this.update();\n\n        }\n\n        _handleMouseMovePan( event ) {\n\n            //console.log( 'handleMouseMovePan' );\n\n            this._panEnd.set( event.offsetX, event.offsetY );\n\n            this._panDelta.subVectors( this._panEnd, this._panStart );\n\n            this._pan( this._panDelta.x, this._panDelta.y );\n\n            this._panStart.copy( this._panEnd );\n\n            this.update();\n\n        }\n\n        _handleMouseUp( event ) {\n\n            //console.log( 'handleMouseUp' );\n\n        }\n\n        _calculateMinZoom(cam_pos, map_intersect){\n            return map_intersect.clone().add(\n                cam_pos.clone()\n                .sub(map_intersect)\n                .normalize()\n                .multiplyScalar(this.maxDistance)\n            );\n        }\n\n\n        _handleMouseWheel( event ) {\n            this._handleUpdateDollyTrackMouse(event);\n\n            var delta = 0;\n\n            if ( event.wheelDelta !== undefined ) {\n\n                // WebKit / Opera / Explorer 9\n\n                delta = event.wheelDelta;\n\n            } else if ( event.detail !== undefined ) {\n\n                // Firefox\n\n                delta = - event.detail;\n\n            }\n\n            if ( delta > 0 ) {\n                this._dollyOut( this._getZoomScale() );\n            } else if ( delta < 0 ) {\n                this._dollyIn( this._getZoomScale() );\n            }\n\n            this.update();\n        }\n\n        _handleKeyDown( event ) {\n\n            //console.log( 'handleKeyDown' );\n\n            switch ( event.keyCode ) {\n\n                case this.keys.UP:\n                    this._pan( 0, this.keyPanSpeed );\n                    this.update();\n                    break;\n\n                case this.keys.BOTTOM:\n                    this._pan( 0, - this.keyPanSpeed );\n                    this.update();\n                    break;\n\n                case this.keys.LEFT:\n                    this._pan( this.keyPanSpeed, 0 );\n                    this.update();\n                    break;\n\n                case this.keys.RIGHT:\n                    this._pan( - this.keyPanSpeed, 0 );\n                    this.update();\n                    break;\n\n            }\n        }\n\n        _handleUpdateDollyTrackTouch( event ){\n            var centerpoint = new Vector2();\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            centerpoint.x = event.touches[ 0 ].pageX + (dx / 2);\n            centerpoint.y = event.touches[ 0 ].pageY + (dy / 2);\n\n            var mouse = new Vector2();\n            mouse.x = ( centerpoint.x / domElement.clientWidth ) * 2 - 1;\n            mouse.y = - ( centerpoint.y / domElement.clientHeight ) * 2 + 1;\n\n            this._updateDollyTrack(mouse);\n        }\n\n        _handleTouchStartDolly( event ) {\n            this._handleUpdateDollyTrackTouch(event);\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            var distance = Math.sqrt( dx * dx + dy * dy );\n\n            this._dollyStart.set( 0, distance );\n\n        }\n\n        _handleTouchStartPan( event ) {\n\n            //console.log( 'handleTouchStartPan' );\n\n            this._panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n        }\n\n\n        _handleTouchMoveDolly( event ) {\n            this._handleUpdateDollyTrackTouch(event);\n\n            //console.log( 'handleTouchMoveDolly' );\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            var distance = Math.sqrt( dx * dx + dy * dy );\n\n            this._dollyEnd.set( 0, distance );\n\n            this._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n            if ( this._dollyDelta.y > 0 ) {\n\n                this._dollyOut( this._getZoomScale() );\n\n            } else if ( this._dollyDelta.y < 0 ) {\n\n                this._dollyIn( this._getZoomScale() );\n\n            }\n\n            this._dollyStart.copy( this._dollyEnd );\n\n            this.update();\n\n        }\n\n        _handleTouchMovePan( event ) {\n\n            this._panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n            this._panDelta.subVectors( this._panEnd, this._panStart );\n\n            this._pan( this._panDelta.x, this._panDelta.y );\n\n            this._panStart.copy( this._panEnd );\n\n            this.update();\n\n        }\n\n        _handleTouchEnd( event ) {\n            //console.log( 'handleTouchEnd' );\n        }\n\n        //\n        // event handlers - FSM: listen for events and reset state\n        //\n\n        _onMouseDown( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n\n            if ( event.button === this.mouseButtons.ZOOM ) {\n\n                if ( this.enableZoom === false ) return;\n\n                this._handleMouseDownDolly( event );\n\n                this._state = this._STATES.DOLLY;\n\n            } else if ( event.button === this.mouseButtons.PAN ) {\n\n                if ( this.enablePan === false ) return;\n\n                this._handleMouseDownPan( event );\n\n                this._state = this._STATES.PAN;\n\n            }\n\n            if ( this._state !== this._STATES.NONE ) {\n\n                document.addEventListener( 'mousemove', this._onMouseMove.bind(this), false );\n                document.addEventListener( 'mouseup', this._onMouseUp.bind(this), false );\n\n                this.dispatchEvent( this._startEvent );\n\n            }\n\n        }\n\n        _onMouseMove( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n\n            if ( this._state === this._STATES.DOLLY ) {\n\n                if ( this.enableZoom === false ) return;\n\n                this._handleMouseMoveDolly( event );\n\n            } else if ( this._state === this._STATES.PAN ) {\n\n                if ( this.enablePan === false ) return;\n\n                this._handleMouseMovePan( event );\n            }\n        }\n\n        _onMouseUp( event ) {\n\n            if ( this.enabled === false ) return;\n\n            this._handleMouseUp( event );\n\n            document.removeEventListener( 'mousemove', this._onMouseMove, false );\n            document.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n            this.dispatchEvent( this._endEvent );\n\n            this._state = this._STATES.NONE;\n\n        }\n\n        _onMouseWheel( event ) {\n            if ( this.enabled === false || this.enableZoom === false || ( this._state !== this._STATES.NONE ) ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            this._handleMouseWheel( event );\n\n            this.dispatchEvent( this._startEvent ); // not sure why these are here...\n            this.dispatchEvent( this._endEvent );\n\n        }\n\n        _onKeyDown( event ) {\n\n            if ( this.enabled === false || this.enableKeys === false || this.enablePan === false ) return;\n\n            this._handleKeyDown( event );\n\n        }\n\n        _onTouchStart( event ) {\n\n            if ( this.enabled === false ) return;\n\n            switch ( event.touches.length ) {\n                case 1: // three-fingered touch: pan\n\n                    if ( this.enablePan === false ) return;\n\n                    this._handleTouchStartPan( event );\n\n                    this._state = this._STATES.TOUCH_PAN;\n\n                    break;\n\n                case 2:\t// two-fingered touch: dolly\n\n                    if ( this.enableZoom === false ) return;\n\n                    this._handleTouchStartDolly( event );\n\n                    this._state = this._STATES.TOUCH_DOLLY;\n\n                    break;\n\n                default:\n\n                    this._state = this._STATES.NONE;\n\n            }\n\n            if ( this._state !== this._STATES.NONE ) {\n\n                this.dispatchEvent( this._startEvent );\n\n            }\n\n        }\n\n        _onTouchMove( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            switch ( event.touches.length ) {\n\n                case 1: // one-fingered touch: pan\n                    if ( this.enablePan === false ) return;\n                    if ( this._state !== this._STATES.TOUCH_PAN ) return; // is this needed?...\n\n                    this._handleTouchMovePan( event );\n\n                    break;\n\n                case 2: // two-fingered touch: dolly\n\n                    if ( this.enableZoom === false ) return;\n                    if ( this._state !== this._STATES.TOUCH_DOLLY ) return; // is this needed?...\n\n                    this._handleTouchMoveDolly( event );\n\n                    break;\n\n                default:\n\n                    this._state = this._STATES.NONE;\n\n            }\n\n        }\n\n        _onTouchEnd( event ) {\n\n            if ( this.enabled === false ) return;\n\n            this._handleTouchEnd( event );\n\n            this.dispatchEvent( this._endEvent );\n\n            this._state = this._STATES.NONE;\n\n        }\n\n        _onContextMenu( event ) {\n            event.preventDefault();\n        }\n\n};\n\nif(window && window.THREE){\n    window.THREE.MapControls = MapControls;\n}\n\nexport default MapControls;\n","var THREE = require('three');\nvar MapControls = require('./three-map-controls.js').default || THREE.MapControls;\n\nclass MapControlsDemo {\n    constructor (mode) {\n        this.container = document.body;\n        this.scene = new THREE.Scene();\n        this.renderer = null;\n        this.meshes = [];\n        this.dims = 10;\n        this.selectedObject = null;\n        this.controls;\n        this.mode;\n\n        this.init();\n        this.setMode(mode);\n        this.animate();\n    }\n\n    setMode(mode) {\n        this.mode = mode;\n        const links = {\n            sphere: document.getElementById('sphere-link'),\n            plane: document.getElementById('plane-link')\n        };\n\n        links[this.mode].style.display = 'none';\n        links[(this.mode == 'plane')? 'sphere' : 'plane'].style.display = 'inline-block';\n\n        this.meshes.forEach((_m) => {\n            this.scene.remove(_m);\n        });\n\n        switch(this.mode){\n            case 'sphere':\n                this.initSphere();\n                break;\n            case 'plane':\n                this.initPlane();\n                break;\n        }\n    }\n\n    initSphere(){\n\n        var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 1000 );\n        camera.position.z = 40;\n        const radius = 10;\n        this.controls = new MapControls( camera, this.renderer.domElement, {\n            target: new THREE.Sphere(new THREE.Vector3(0,0,0), radius),\n            mode: 'sphere',\n            minDistance: 1,\n            maxDistance: camera.position.z\n        });\n\n        const colors = [];\n\n        const geometry = new THREE.SphereBufferGeometry(radius, this.dims, this.dims);\n        geometry.computeBoundingSphere();\n\n        const vertices = geometry.getAttribute('position').array;\n        for(var i = 0; i < vertices.length; i += 3){\n            var color = new THREE.Color();\n            var vert = new THREE.Vector3(vertices[i], vertices[i+1], vertices[i+2]);\n\n            color.setRGB(\n                ( vert.x / radius ) + 0.5,\n                ( vert.y / radius ) + 0.5,\n                ( vert.z / radius ) + 0.5\n            );\n\n            colors.push( color.r, color.g, color.b );\n        }\n\n        geometry.addAttribute( 'color', new THREE.Float32BufferAttribute( Float32Array.from(colors), 3 ) );\n\n        const points = new THREE.Points(\n            geometry,\n            new THREE.PointsMaterial( { size: 1, vertexColors: THREE.VertexColors } )\n        );\n\n        this.scene.add( points );\n        this.meshes.push( points );\n\n        const polys = new THREE.Mesh(\n            geometry,\n            new THREE.MeshBasicMaterial({\n                vertexColors: THREE.VertexColors,\n                transparent: true,\n                opacity: 0.2\n\n            })\n        );\n\n        this.meshes.push( polys );\n        this.scene.add( polys );\n\n        const lines = new THREE.Mesh(\n            geometry,\n            new THREE.MeshBasicMaterial({\n                vertexColors: THREE.VertexColors,\n                wireframe: true\n            })\n        );\n\n        this.meshes.push( lines );\n        this.scene.add( lines );\n\n    }\n\n    initPlane(){\n\n        var camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 1, 1000 );\n        camera.position.z = 20;\n        this.controls = new MapControls( camera, this.renderer.domElement, {\n            target: new THREE.Plane(new THREE.Vector3(0,0,1), 0),\n            mode: 'plane',\n            minDistance: 2.0,\n            maxDistance: 20\n        });\n\n        var offset = 3;\n\n        for(var x = 0; x < this.dims; x++){\n            for(var y = 0; y < this.dims; y++){\n                var geometry = new THREE.CubeGeometry(1, 1, 1);\n                var material = new THREE.MeshNormalMaterial();\n\n                var mesh = new THREE.Mesh( geometry, material );\n                mesh.position.x += ((-0.5 * this.dims * offset) + (x * offset));\n                mesh.position.y += ((-0.5 * this.dims * offset) + (y * offset));\n\n                this.meshes.push( mesh );\n                this.scene.add( mesh );\n\n                mesh.geometry.computeBoundingSphere();\n            }\n        }\n    }\n\n    init () {\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setPixelRatio( window.devicePixelRatio );\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n\n        this.container.appendChild( this.renderer.domElement );\n\n        window.addEventListener( 'resize', ()=>{\n            this.onWindowResize();\n        }, false );\n\n        this.renderer.domElement.addEventListener( 'mousedown', (_e) => {this.pick(_e)} );\n        this.renderer.domElement.addEventListener( 'dblclick', (_e) => {this.zoomTo(_e)} );\n\n        setInterval(()=>{\n            var bbox = this.controls.targetAreaVisible();\n            console.log(`(${bbox.min.x}, ${bbox.min.y}, ${bbox.max.x}, ${bbox.max.y})`);\n        }, 1000);\n    }\n\n    zoomTo(){\n        if(!this.selectedObject)\n            return;\n\n        this.controls.zoomToFit(this.selectedObject);\n    }\n\n    pick(event){\n        var mouse = new THREE.Vector2();\n\n        mouse.x = ( event.clientX / this.renderer.domElement.clientWidth ) * 2 - 1;\n        mouse.y = - ( event.clientY / this.renderer.domElement.clientHeight ) * 2 + 1;\n\n        var raycaster = new THREE.Raycaster();\n\n        raycaster.setFromCamera(mouse, this.controls.camera);\n\n        // calculate objects intersecting the picking ray\n        var intersects = raycaster.intersectObjects( this.scene.children, true );\n        if(intersects.length > 0){\n            this.selectedObject = intersects[0].object;\n        }else{\n            this.selectedObject = null;\n        }\n\n    }\n\n    onWindowResize(){\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n        this.controls.camera.aspect = this.renderer.domElement.clientWidth / this.renderer.domElement.clientHeight;\n        this.controls.camera.updateProjectionMatrix();\n        this.renderer.setSize( this.renderer.domElement.clientWidth, this.renderer.domElement.clientHeight );\n    }\n\n    animate(){\n        requestAnimationFrame( () => {\n            this.animate();\n        } );\n\n        if(this.mode == 'plane'){\n            this.meshes.forEach(( mesh ) => {\n                mesh.rotation.x += 0.005;\n                mesh.rotation.y += 0.01;\n            });\n        }\n\n        this.controls.update();\n        this.renderer.render( this.scene, this.controls.camera );\n    }\n};\n\nwindow.addEventListener('load', () => {\n    window.demo = new MapControlsDemo('sphere');\n});"],"sourceRoot":""}