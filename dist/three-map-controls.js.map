{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///delegated ./node_modules/three/build/three.module.js from dll-reference vendor","webpack:///./test/stub_dom.js","webpack:///external \"vendor\"","webpack:///./src/three-map-controls.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","console","log","document","addEventListener","removeEventListener","body","clientWidth","clientHeight","vendor","__webpack_exports__","three__WEBPACK_IMPORTED_MODULE_0__","window","require","MapControls","EventDispatcher","constructor","camera","domElement","options","super","this","undefined","enabled","target","minDistance","maxDistance","enableZoom","zoomSpeed","zoomDampingAlpha","initialZoom","enablePan","keyPanSpeed","panDampingAlpha","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ZOOM","MOUSE","MIDDLE","PAN","assign","isTargetValid","mode","Error","normal","constant","center","radius","target0","clone","position0","position","zoom0","zoom","_changeEvent","type","_startEvent","_endEvent","_STATES","NONE","DOLLY","TOUCH_DOLLY","TOUCH_PAN","_init","distanceToPoint","_state","_mouse","Vector2","_finalTargetDistance","_currentTargetDistance","_panTarget","Vector3","_panCurrent","_minZoomPosition","_maxZoomPosition","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_camOrientation","_zoomAlpha","_screenWorldXform","Math","tan","fov","PI","_straightDollyTrack","lerpVectors","abs","lookAt","_intersectCameraTarget","ray","direction","normalize","_updateZoomAlpha","_onContextMenu","bind","_onMouseDown","_onMouseWheel","_onTouchStart","_onTouchEnd","_onTouchMove","_onKeyDown","update","intersection","coplanar","projectPoint","Ray","subVectors","intersectPlane","intersectSphere","_updateDollyTrack","getZoomAlpha","reset","copy","updateProjectionMatrix","dispatchEvent","panDelta","oldPanCurrent","lerp","add","v","quat","Quaternion","setFromAxisAngle","setFromMatrixColumn","matrix","x","applyQuaternion","y","dispose","_onMouseMove","_onMouseUp","zoomToFit","mesh","width","height","geometry","boundingSphere","localToWorld","vFOV","hFOV","atan","aspect","obj_aspect","targetAreaVisible","bbox","vOffset","hOffset","depth","distanceToPlane","Box2","cam_pos","cam_xpos","z","halfPi","angleTo","length","min","cos","forEach","_mm","max","diff","damping_alpha","round","intersect","addVectors","multiplyScalar","_calculateMinZoom","sub","_getZoomScale","pow","_panLeft","distance","cameraMatrix","set","_panUp","_pan","deltaX","deltaY","targetDistance","element","camToTarget","_dollyIn","dollyScale","_cameraOfKnownType","warn","_dollyOut","_handleUpdateDollyTrackMouse","event","prevMouse","offsetX","offsetY","equals","rc","Raycaster","setFromCamera","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseUp","map_intersect","_handleMouseWheel","delta","wheelDelta","detail","_handleKeyDown","keyCode","_handleUpdateDollyTrackTouch","centerpoint","dx","touches","pageX","dy","pageY","mouse","_handleTouchStartDolly","sqrt","_handleTouchStartPan","_handleTouchMoveDolly","_handleTouchMovePan","_handleTouchEnd","preventDefault","button","stopPropagation"],"mappings":"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","file":"three-map-controls.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = (__webpack_require__(2))(0);","module.exports = {\n    console: {\n        log: function () {}\n    },\n    document: {\n        addEventListener: function () {},\n        removeEventListener: function () {},\n        body: {\n            clientWidth: 1920,\n            clientHeight: 1080,\n            addEventListener: function () {},\n            removeEventListener: function () {}\n        }\n    }\n};\n","module.exports = vendor;","'use strict';\n\n//Alex Pilafian 2016-2019 - sikanrong@gmail.com\n\nimport {Box2, Quaternion, EventDispatcher, Vector2, Vector3, Raycaster, Ray, MOUSE} from 'three'\n\n//test stubs\nif(typeof window == 'undefined'){\n    let window = require('../test/stub_dom');\n}\n\nclass MapControls extends EventDispatcher{\n\n        constructor(camera, domElement, options){\n            super();\n\n            this.camera = camera;\n\n            //Object to use for listening for keyboard/mouse events\n            this.domElement = ( domElement !== undefined ) ? domElement : window.document;\n\n            // Set to false to disable this control (Disables all input events)\n            this.enabled = true;\n\n            // Must be set to instance of Plane or Sphere\n            this.target;\n\n            // How far you can dolly in and out\n            this.minDistance = 1; //probably should never be 0\n            this.maxDistance = 100;\n\n            // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n            // Set to false to disable zooming\n            this.enableZoom = true;\n            this.zoomSpeed = 6.0;\n            this.zoomDampingAlpha = 0.1;\n            this.initialZoom = 0; //start zoomed all the way out unless set in options.\n\n            // Set to false to disable panning\n            this.enablePan = true;\n            this.keyPanSpeed = 12.0;\t// pixels moved per arrow key push\n            this.panDampingAlpha = 0.1;\n\n            // Set to false to disable use of the keys\n            this.enableKeys = true;\n\n            // The four arrow keys\n            this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n            // Mouse buttons\n            this.mouseButtons = { ZOOM: MOUSE.MIDDLE, PAN: MOUSE.LEFT };\n            \n            //Copy options from parameters\n            Object.assign(this, options);\n            let isTargetValid = false;\n\n            if(this.mode === undefined){\n                throw new Error('\\'mode\\' option must be set to either \\'plane\\' or \\'sphere\\'');\n            }\n\n            switch(this.mode){\n                case 'plane':\n                    isTargetValid = (this.target.normal !== undefined && this.target.constant !== undefined);\n                    break;\n                case 'sphere':\n                    isTargetValid = (this.target.center !== undefined && this.target.radius !== undefined);\n                    break;\n            }\n\n            if(!isTargetValid){\n                throw new Error('\\'target\\' option must be an instance of type THREE.Plane or THREE.Sphere');\n            }\n\n            // for reset\n            this.target0 = this.target.clone();\n            this.position0 = this.camera.position.clone();\n            this.zoom0 = this.camera.zoom;\n\n            this._changeEvent = { type: 'change' };\n            this._startEvent = { type: 'start' };\n            this._endEvent = { type: 'end' };\n\n            this._STATES = { NONE : - 1, DOLLY : 1, PAN : 2, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\n            this._init();\n        }\n\n        _init (){\n            if(this.target.distanceToPoint(this.camera.position) == 0){\n                throw new Error(\"ORIENTATION_UNKNOWABLE: initial Camera position cannot intersect target plane.\");\n            }\n\n            this._state = this._STATES.NONE;\n\n            this._mouse = new Vector2();\n\n            this._finalTargetDistance = 0;\n            this._currentTargetDistance = 0;\n\n            this._panTarget = new Vector3();\n            this._panCurrent = new Vector3();\n\n            this._minZoomPosition = new Vector3();\n            this._maxZoomPosition = new Vector3();\n\n            this._panStart = new Vector2();\n            this._panEnd = new Vector2();\n            this._panDelta = new Vector2();\n\n            this._dollyStart = new Vector2();\n            this._dollyEnd = new Vector2();\n            this._dollyDelta = new Vector2();\n\n            this._camOrientation = new Vector2();\n\n            this._zoomAlpha;\n\n            this._screenWorldXform = Math.tan( ( this.camera.fov / 2 ) * Math.PI / 180.0 );\n\n            //establish initial camera orientation based on position w.r.t. _this.target plane\n            this._straightDollyTrack();\n\n            this.camera.position.lerpVectors(this._minZoomPosition, this._maxZoomPosition, this.initialZoom);\n            this._finalTargetDistance = this._currentTargetDistance = Math.abs(this.target.distanceToPoint(this.camera.position));\n\n            this.camera.lookAt(this._maxZoomPosition); //set the orientation of the camera towards the map.\n            this._camOrientation = this._intersectCameraTarget().ray.direction.clone().normalize();\n\n            this._updateZoomAlpha();\n\n            //Assign event listeners\n\n            this.domElement.addEventListener( 'contextmenu', this._onContextMenu.bind(this), false );\n\n            this.domElement.addEventListener( 'mousedown', this._onMouseDown.bind(this), false );\n            this.domElement.addEventListener( 'mousewheel', this._onMouseWheel.bind(this), false );\n            this.domElement.addEventListener( 'MozMousePixelScroll', this._onMouseWheel.bind(this), false ); // firefox\n\n            this.domElement.addEventListener( 'touchstart', this._onTouchStart.bind(this), false );\n            this.domElement.addEventListener( 'touchend', this._onTouchEnd.bind(this), false );\n            this.domElement.addEventListener( 'touchmove', this._onTouchMove.bind(this), false );\n\n            this.domElement.addEventListener( 'keydown', this._onKeyDown.bind(this), false );\n\n\n            this.update();\n        }\n\n        _intersectCameraTarget(){\n            let intersection = new Vector3();\n            let ray;\n\n            switch(this.mode){\n                case 'plane':\n                    const coplanar = new Vector3();\n                    this.target.projectPoint(this.camera.position, coplanar);\n                    ray = new Ray(this.camera.position, new Vector3().subVectors(coplanar, this.camera.position).normalize());\n                    ray.intersectPlane(this.target, intersection);\n                    break;\n                case 'sphere':\n                    ray = new Ray(this.camera.position, (new Vector3()).subVectors(this.target.center, this.camera.position).normalize());\n                    ray.intersectSphere(this.target, intersection);\n                    break;\n            }\n\n            return {\n                intersection: intersection,\n                ray: ray\n            }\n        }\n\n        _straightDollyTrack(){\n            this._updateDollyTrack(this._intersectCameraTarget().ray);\n        }\n\n        getZoomAlpha () {\n            return this._zoomAlpha;\n        }\n\n        reset () {\n\n            this.target.copy( this.target0 );\n            this.camera.position.copy( this.position0 );\n            this.camera.zoom = this.zoom0;\n\n            this.camera.updateProjectionMatrix();\n\n            this._init(); //reinit\n\n            this.dispatchEvent( this._changeEvent );\n\n            this.update();\n\n            this._state = this._STATES.NONE;\n\n        };\n\n        // this method is exposed, but perhaps it would be better if we can make it private...\n        update () {\n            var panDelta = new Vector3();\n            var oldPanCurrent = new Vector3();\n            var position = this.camera.position;\n\n            // move target to panned location\n            oldPanCurrent.copy(this._panCurrent);\n            this._panCurrent.lerp( this._panTarget, this.panDampingAlpha );\n            panDelta.subVectors(this._panCurrent, oldPanCurrent);\n\n            switch (this.mode) {\n                case 'plane':\n                    this._maxZoomPosition.add(panDelta);\n                    this._minZoomPosition.add(panDelta);\n                    break;\n                case 'sphere':\n                    const v = new Vector3();\n                    const quat = new Quaternion();\n\n                    quat.setFromAxisAngle(v.setFromMatrixColumn( this.camera.matrix, 1 ), panDelta.x);\n\n                    this._maxZoomPosition.applyQuaternion(quat);\n                    this._minZoomPosition.applyQuaternion(quat);\n\n                    quat.setFromAxisAngle(v.setFromMatrixColumn( this.camera.matrix, 0 ), panDelta.y);\n\n                    this._maxZoomPosition.applyQuaternion(quat);\n                    this._minZoomPosition.applyQuaternion(quat);\n\n                    break;\n            }\n\n            position.lerpVectors(this._minZoomPosition, this._maxZoomPosition, this._updateZoomAlpha());\n\n            if(this.mode == 'sphere'){\n                this.camera.lookAt(this.target.center);\n            }\n        }\n\n        dispose () {\n            this.domElement.removeEventListener( 'contextmenu', this._onContextMenu, false );\n            this.domElement.removeEventListener( 'mousedown', this._onMouseDown, false );\n            this.domElement.removeEventListener( 'mousewheel', this._onMouseWheel, false );\n            this.domElement.removeEventListener( 'MozMousePixelScroll', this._onMouseWheel, false ); // firefox\n\n            this.domElement.removeEventListener( 'touchstart', this._onTouchStart, false );\n            this.domElement.removeEventListener( 'touchend', this._onTouchEnd, false );\n            this.domElement.removeEventListener( 'touchmove', this._onTouchMove, false );\n\n            window.document.removeEventListener( 'mousemove', this._onMouseMove, false );\n            window.document.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n            this.domElement.removeEventListener( 'keydown', this._onKeyDown, false );\n        };\n\n        zoomToFit (mesh, center, width, height){\n            //if only width is passed interpret it as radius and set height equal to width\n            center = center || mesh.geometry.boundingSphere.center;\n            width = width || (mesh.geometry.boundingSphere.radius * 2);\n\n            if(height === undefined)\n                height = width;\n\n            this._panTarget.copy(mesh.localToWorld(center.clone()));\n            this._panCurrent.copy(this._intersectCameraTarget().intersection);\n\n            this._straightDollyTrack();\n\n            var vFOV = this.camera.fov * (Math.PI / 180);\n            var hFOV = 2 * Math.atan( Math.tan( vFOV / 2 ) * this.camera.aspect );\n            var obj_aspect = width / height;\n\n            this._finalTargetDistance = ((((obj_aspect > this.camera.aspect)? width : height) / 2) / Math.tan(((obj_aspect > this.camera.aspect)? hFOV : vFOV) / 2));\n\n\n        };\n\n        //returns a bounding box denoting the visible target area\n        targetAreaVisible(){\n\n            let bbox, vOffset, hOffset, center;\n\n            switch(this.mode){\n                case 'plane':\n                    var ray = new Ray(this.camera.position, this._camOrientation);\n                    var depth = ray.distanceToPlane(this.target);\n\n                    center = this.camera.position.clone();\n\n                    vOffset = this._screenWorldXform * depth;\n                    hOffset = vOffset * this.camera.aspect;\n\n                    bbox = new Box2(\n                        new Vector2(center.x - hOffset, center.y - vOffset),\n                        new Vector2(center.x + hOffset, center.y + vOffset)\n                    );\n\n                    break;\n                case 'sphere':\n\n                    const cam_pos = ((new Vector3()).subVectors(this.target.center, this.camera.position));\n                    const cam_xpos = new Vector3(cam_pos.x, 0, cam_pos.z);\n\n                    const halfPi = Math.PI / 2;\n\n                    center = new Vector2(\n                        cam_xpos.angleTo(new Vector3(1,0,0)),\n                        cam_pos.angleTo(new Vector3(0,1,0))\n                    );\n\n                    center.x = (this.camera.position.z < 0)? (2*Math.PI - center.x) : center.x;\n\n                    const d = cam_pos.length();\n\n                    //Derived from solving the Haversine formula for Phi_2 when all other variables\n                    //(d, r, Theta_1, Theta_2, Phi_1) are given\n                    vOffset = this._screenWorldXform * ((d / this.target.radius) - 1);\n                    vOffset = Math.min(vOffset, halfPi);\n\n                    //Account for the aspect ratio of the screen, and the deformation of the sphere\n                    const r = this.target.radius * Math.cos(center.y - halfPi);\n                    hOffset = vOffset * this.camera.aspect * ( this.target.radius / r);\n                    hOffset = Math.min(hOffset, halfPi);\n\n                    bbox = new Box2(\n                        new Vector2(center.x - hOffset - halfPi, center.y - vOffset - halfPi),\n                        new Vector2(center.x + hOffset - halfPi, center.y + vOffset - halfPi)\n                    );\n\n                    ['min', 'max'].forEach(_mm => {\n                        bbox[_mm].x = (bbox[_mm].x > Math.PI)? (-2*Math.PI + bbox[_mm].x): bbox[_mm].x;\n                    });\n\n                    break;\n            };\n\n            return bbox;\n        }\n\n        _updateZoomAlpha(){\n            this._finalTargetDistance = Math.max( this.minDistance, Math.min( this.maxDistance, this._finalTargetDistance ) );\n            var diff = this._currentTargetDistance - this._finalTargetDistance;\n            var damping_alpha = this.zoomDampingAlpha;\n            this._currentTargetDistance -= diff * damping_alpha;\n            var rounding_places = 100000;\n            this._zoomAlpha = Math.abs(Math.round((1 - ((this._currentTargetDistance - this.minDistance) / (this.maxDistance - this.minDistance))) * rounding_places ) / rounding_places);\n\n            return this._zoomAlpha;\n        }\n\n        _updateDollyTrack(ray){\n            let intersect = new Vector3();\n\n            switch(this.mode){\n                case 'plane':\n                    ray.intersectPlane(this.target, intersect);\n                    break;\n                case 'sphere':\n                    ray.intersectSphere(this.target, intersect);\n                    break;\n            }\n\n            if(intersect){\n                this._maxZoomPosition.addVectors(intersect, new Vector3().subVectors(this.camera.position, intersect).normalize().multiplyScalar(this.minDistance));\n                this._minZoomPosition.copy(this._calculateMinZoom(this.camera.position, intersect));\n\n                this._finalTargetDistance = this._currentTargetDistance = intersect.clone().sub(this.camera.position).length();\n            }\n        }\n\n        _getZoomScale() {\n            return Math.pow( 0.95, this.zoomSpeed );\n        }\n\n\n        _panLeft( distance, cameraMatrix ) {\n            var v = new Vector3();\n\n            switch(this.mode){\n                case 'sphere':\n                    v.set(- distance, 0, 0);\n                    break;\n                case 'plane':\n                    v.setFromMatrixColumn( cameraMatrix, 0 ); // get Y column of cameraMatrix\n                    v.multiplyScalar( - distance );\n                    break;\n            }\n\n            this._panTarget.add( v );\n        }\n\n        _panUp ( distance, cameraMatrix ) {\n            var v = new Vector3();\n\n            switch(this.mode){\n                case 'sphere':\n                    v.set(0, - distance, 0);\n                    break;\n                case 'plane':\n                    v.setFromMatrixColumn( cameraMatrix, 1 ); // get Y column of cameraMatrix\n                    v.multiplyScalar( distance );\n                    break;\n            }\n\n            this._panTarget.add( v );\n        }\n\n        // deltaX and deltaY are in pixels; right and down are positive\n        _pan (deltaX, deltaY) {\n            var element = this.domElement === window.document ? this.domElement.body : this.domElement;\n\n            var r = new Ray(this.camera.position, this._camOrientation);\n            var targetDistance;\n\n            switch(this.mode){\n                case 'plane':\n                    targetDistance = this._screenWorldXform * r.distanceToPlane(this.target);\n                    break;\n                case 'sphere':\n                    //in spherical mode the pan coords are saved as radians and used as rotation angles\n                    const camToTarget = (new Vector3()).subVectors(this.camera.position, this.target.center);\n                    targetDistance = this._screenWorldXform * ((camToTarget.length() / this.target.radius) - 1);\n                    break;\n            }\n\n            // we actually don't use screenWidth, since perspective camera is fixed to screen height\n            this._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.camera.matrix );\n            this._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.camera.matrix );\n\n        }\n\n        _dollyIn( dollyScale ) {\n            if ( this._cameraOfKnownType() ) {\n                this._finalTargetDistance /= dollyScale;\n            } else {\n                console.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n                this.enableZoom = false;\n            }\n        }\n\n        _dollyOut( dollyScale ) {\n            if ( this._cameraOfKnownType() ) {\n                this._finalTargetDistance *= dollyScale;\n            } else {\n                console.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n                this.enableZoom = false;\n            }\n        }\n\n        _cameraOfKnownType() {\n            return this.camera.type === 'PerspectiveCamera'\n        }\n\n        _handleUpdateDollyTrackMouse(event){\n            var prevMouse = this._mouse.clone();\n            this._mouse.set(( event.offsetX / this.domElement.clientWidth ) * 2 - 1, - ( event.offsetY / this.domElement.clientHeight ) * 2 + 1);\n\n            if(!prevMouse.equals(this._mouse)){\n                var rc = new Raycaster();\n                rc.setFromCamera(this._mouse, this.camera);\n                this._updateDollyTrack(rc.ray);\n            }\n        }\n\n        _handleMouseDownDolly( event ) {\n            this._handleUpdateDollyTrackMouse(event);\n            this._dollyStart.set( event.offsetX, event.offsetY );\n        }\n\n        _handleMouseDownPan( event ) {\n\n            this._panStart.set( event.offsetX, event.offsetY );\n\n        }\n\n        _handleMouseMoveDolly( event ) {\n\n            this._handleUpdateDollyTrackMouse(event);\n\n            //console.log( 'handleMouseMoveDolly' );\n\n            this._dollyEnd.set( event.offsetX, event.offsetY );\n\n            this._dollyDelta.subVectors(this._dollyEnd, this._dollyStart );\n\n            if ( this._dollyDelta.y > 0 ) {\n\n                this._dollyIn( this._getZoomScale() );\n\n            } else if ( this._dollyDelta.y < 0 ) {\n\n                this._dollyOut( this._getZoomScale() );\n\n            }\n\n            this._dollyStart.copy( this._dollyEnd );\n\n            this.update();\n\n        }\n\n        _handleMouseMovePan( event ) {\n\n            //console.log( 'handleMouseMovePan' );\n\n            this._panEnd.set( event.offsetX, event.offsetY );\n\n            this._panDelta.subVectors( this._panEnd, this._panStart );\n\n            this._pan( this._panDelta.x, this._panDelta.y );\n\n            this._panStart.copy( this._panEnd );\n\n            this.update();\n\n        }\n\n        _handleMouseUp( event ) {\n\n            //console.log( 'handleMouseUp' );\n\n        }\n\n        _calculateMinZoom(cam_pos, map_intersect){\n            return map_intersect.clone().add(\n                cam_pos.clone()\n                .sub(map_intersect)\n                .normalize()\n                .multiplyScalar(this.maxDistance)\n            );\n        }\n\n\n        _handleMouseWheel( event ) {\n            this._handleUpdateDollyTrackMouse(event);\n\n            var delta = 0;\n\n            if ( event.wheelDelta !== undefined ) {\n\n                // WebKit / Opera / Explorer 9\n\n                delta = event.wheelDelta;\n\n            } else if ( event.detail !== undefined ) {\n\n                // Firefox\n\n                delta = - event.detail;\n\n            }\n\n            if ( delta > 0 ) {\n                this._dollyOut( this._getZoomScale() );\n            } else if ( delta < 0 ) {\n                this._dollyIn( this._getZoomScale() );\n            }\n\n            this.update();\n        }\n\n        _handleKeyDown( event ) {\n\n            //console.log( 'handleKeyDown' );\n\n            switch ( event.keyCode ) {\n\n                case this.keys.UP:\n                    this._pan( 0, this.keyPanSpeed );\n                    this.update();\n                    break;\n\n                case this.keys.BOTTOM:\n                    this._pan( 0, - this.keyPanSpeed );\n                    this.update();\n                    break;\n\n                case this.keys.LEFT:\n                    this._pan( this.keyPanSpeed, 0 );\n                    this.update();\n                    break;\n\n                case this.keys.RIGHT:\n                    this._pan( - this.keyPanSpeed, 0 );\n                    this.update();\n                    break;\n\n            }\n        }\n\n        _handleUpdateDollyTrackTouch( event ){\n            var centerpoint = new Vector2();\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            centerpoint.x = event.touches[ 0 ].pageX + (dx / 2);\n            centerpoint.y = event.touches[ 0 ].pageY + (dy / 2);\n\n            var mouse = new Vector2();\n            mouse.x = ( centerpoint.x / domElement.clientWidth ) * 2 - 1;\n            mouse.y = - ( centerpoint.y / domElement.clientHeight ) * 2 + 1;\n\n            this._updateDollyTrack(mouse);\n        }\n\n        _handleTouchStartDolly( event ) {\n            this._handleUpdateDollyTrackTouch(event);\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            var distance = Math.sqrt( dx * dx + dy * dy );\n\n            this._dollyStart.set( 0, distance );\n\n        }\n\n        _handleTouchStartPan( event ) {\n\n            //console.log( 'handleTouchStartPan' );\n\n            this._panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n        }\n\n\n        _handleTouchMoveDolly( event ) {\n            this._handleUpdateDollyTrackTouch(event);\n\n            //console.log( 'handleTouchMoveDolly' );\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            var distance = Math.sqrt( dx * dx + dy * dy );\n\n            this._dollyEnd.set( 0, distance );\n\n            this._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n            if ( this._dollyDelta.y > 0 ) {\n\n                this._dollyOut( this._getZoomScale() );\n\n            } else if ( this._dollyDelta.y < 0 ) {\n\n                this._dollyIn( this._getZoomScale() );\n\n            }\n\n            this._dollyStart.copy( this._dollyEnd );\n\n            this.update();\n\n        }\n\n        _handleTouchMovePan( event ) {\n\n            this._panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n            this._panDelta.subVectors( this._panEnd, this._panStart );\n\n            this._pan( this._panDelta.x, this._panDelta.y );\n\n            this._panStart.copy( this._panEnd );\n\n            this.update();\n\n        }\n\n        _handleTouchEnd( event ) {\n            //console.log( 'handleTouchEnd' );\n        }\n\n        //\n        // event handlers - FSM: listen for events and reset state\n        //\n\n        _onMouseDown( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n\n            if ( event.button === this.mouseButtons.ZOOM ) {\n\n                if ( this.enableZoom === false ) return;\n\n                this._handleMouseDownDolly( event );\n\n                this._state = this._STATES.DOLLY;\n\n            } else if ( event.button === this.mouseButtons.PAN ) {\n\n                if ( this.enablePan === false ) return;\n\n                this._handleMouseDownPan( event );\n\n                this._state = this._STATES.PAN;\n\n            }\n\n            if ( this._state !== this._STATES.NONE ) {\n\n                window.document.addEventListener( 'mousemove', this._onMouseMove.bind(this), false );\n                window.document.addEventListener( 'mouseup', this._onMouseUp.bind(this), false );\n\n                this.dispatchEvent( this._startEvent );\n\n            }\n\n        }\n\n        _onMouseMove( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n\n            if ( this._state === this._STATES.DOLLY ) {\n\n                if ( this.enableZoom === false ) return;\n\n                this._handleMouseMoveDolly( event );\n\n            } else if ( this._state === this._STATES.PAN ) {\n\n                if ( this.enablePan === false ) return;\n\n                this._handleMouseMovePan( event );\n            }\n        }\n\n        _onMouseUp( event ) {\n\n            if ( this.enabled === false ) return;\n\n            this._handleMouseUp( event );\n\n            window.document.removeEventListener( 'mousemove', this._onMouseMove, false );\n            window.document.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n            this.dispatchEvent( this._endEvent );\n\n            this._state = this._STATES.NONE;\n\n        }\n\n        _onMouseWheel( event ) {\n            if ( this.enabled === false || this.enableZoom === false || ( this._state !== this._STATES.NONE ) ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            this._handleMouseWheel( event );\n\n            this.dispatchEvent( this._startEvent ); // not sure why these are here...\n            this.dispatchEvent( this._endEvent );\n\n        }\n\n        _onKeyDown( event ) {\n\n            if ( this.enabled === false || this.enableKeys === false || this.enablePan === false ) return;\n\n            this._handleKeyDown( event );\n\n        }\n\n        _onTouchStart( event ) {\n\n            if ( this.enabled === false ) return;\n\n            switch ( event.touches.length ) {\n                case 1: // three-fingered touch: pan\n\n                    if ( this.enablePan === false ) return;\n\n                    this._handleTouchStartPan( event );\n\n                    this._state = this._STATES.TOUCH_PAN;\n\n                    break;\n\n                case 2:\t// two-fingered touch: dolly\n\n                    if ( this.enableZoom === false ) return;\n\n                    this._handleTouchStartDolly( event );\n\n                    this._state = this._STATES.TOUCH_DOLLY;\n\n                    break;\n\n                default:\n\n                    this._state = this._STATES.NONE;\n\n            }\n\n            if ( this._state !== this._STATES.NONE ) {\n\n                this.dispatchEvent( this._startEvent );\n\n            }\n\n        }\n\n        _onTouchMove( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            switch ( event.touches.length ) {\n\n                case 1: // one-fingered touch: pan\n                    if ( this.enablePan === false ) return;\n                    if ( this._state !== this._STATES.TOUCH_PAN ) return; // is this needed?...\n\n                    this._handleTouchMovePan( event );\n\n                    break;\n\n                case 2: // two-fingered touch: dolly\n\n                    if ( this.enableZoom === false ) return;\n                    if ( this._state !== this._STATES.TOUCH_DOLLY ) return; // is this needed?...\n\n                    this._handleTouchMoveDolly( event );\n\n                    break;\n\n                default:\n\n                    this._state = this._STATES.NONE;\n\n            }\n\n        }\n\n        _onTouchEnd( event ) {\n\n            if ( this.enabled === false ) return;\n\n            this._handleTouchEnd( event );\n\n            this.dispatchEvent( this._endEvent );\n\n            this._state = this._STATES.NONE;\n\n        }\n\n        _onContextMenu( event ) {\n            event.preventDefault();\n        }\n\n};\n\nexport default MapControls;\n"],"sourceRoot":""}