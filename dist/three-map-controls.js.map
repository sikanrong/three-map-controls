{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///delegated ./node_modules/three/build/three.module.js from dll-reference vendor","webpack:///external \"vendor\"","webpack:///./src/three-map-controls.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","vendor","__webpack_exports__","three__WEBPACK_IMPORTED_MODULE_0__","MapControls","EventDispatcher","constructor","camera","domElement","options","super","this","undefined","document","enabled","target","minDistance","maxDistance","enableZoom","zoomSpeed","zoomDampingAlpha","initialZoom","enablePan","keyPanSpeed","panDampingAlpha","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ZOOM","MOUSE","MIDDLE","PAN","assign","isTargetValid","mode","Error","normal","constant","center","radius","target0","clone","position0","position","zoom0","zoom","_mouse","Vector2","_finalTargetDistance","_currentTargetDistance","_changeEvent","type","_startEvent","_endEvent","_STATES","NONE","DOLLY","TOUCH_DOLLY","TOUCH_PAN","_state","_panTarget","Vector3","_panCurrent","_minZoomPosition","_maxZoomPosition","_panStart","_panEnd","_panDelta","_dollyStart","_dollyEnd","_dollyDelta","_camOrientation","_lastMouse","_zoomAlpha","_screenWorldXform","Math","tan","fov","PI","_init","distanceToPoint","_straightDollyTrack","lerpVectors","abs","lookAt","sub","normalize","_updateZoomAlpha","addEventListener","_onContextMenu","bind","_onMouseDown","_onMouseWheel","_onTouchStart","_onTouchEnd","_onTouchMove","_onKeyDown","update","_intersectCameraTarget","intersection","ray","forEach","orientation","Ray","multiplyScalar","intersectPlane","subVectors","intersectSphere","_updateDollyTrack","getZoomAlpha","reset","copy","updateProjectionMatrix","dispatchEvent","panDelta","oldPanCurrent","lerp","add","v","quat","Quaternion","setFromAxisAngle","setFromMatrixColumn","matrix","x","applyQuaternion","y","dispose","removeEventListener","_onMouseMove","_onMouseUp","zoomToFit","mesh","width","height","geometry","boundingSphere","localToWorld","vFOV","hFOV","atan","aspect","obj_aspect","targetAreaVisible","bbox","vOffset","hOffset","depth","distanceToPlane","Box2","cameraOriginDist","halfPi","angleTo","z","length","min","_mm","max","diff","damping_alpha","round","intersect","addVectors","_calculateMinZoom","_getZoomScale","pow","_panLeft","distance","cameraMatrix","set","_panUp","_pan","deltaX","deltaY","targetDistance","element","body","camToTarget","clientHeight","_dollyIn","dollyScale","_cameraOfKnownType","console","warn","_dollyOut","_handleUpdateDollyTrackMouse","event","prevMouse","offsetX","clientWidth","offsetY","equals","rc","Raycaster","setFromCamera","_handleMouseDownDolly","_handleMouseDownPan","_handleMouseMoveDolly","_handleMouseMovePan","_handleMouseUp","cam_pos","map_intersect","_handleMouseWheel","delta","wheelDelta","detail","_handleKeyDown","keyCode","_handleUpdateDollyTrackTouch","centerpoint","dx","touches","pageX","dy","pageY","mouse","_handleTouchStartDolly","sqrt","_handleTouchStartPan","_handleTouchMoveDolly","_handleTouchMovePan","_handleTouchEnd","preventDefault","button","stopPropagation","window","THREE"],"mappings":"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","file":"three-map-controls.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = (__webpack_require__(1))(68);","module.exports = vendor;","'use strict';\n\n//Alex Pilafian 2016-2019 - sikanrong@gmail.com\n\nimport {Box2, Quaternion, EventDispatcher, Vector2, Vector3, Raycaster, Ray, MOUSE} from 'three'\n\nclass MapControls extends EventDispatcher{\n\n        constructor(camera, domElement, options){\n            super();\n\n            this.camera = camera;\n\n            //Object to use for listening for keyboard/mouse events\n            this.domElement = ( domElement !== undefined ) ? domElement : document;\n\n            // Set to false to disable this control (Disables all input events)\n            this.enabled = true;\n\n            // Must be set to instance of Plane or Sphere\n            this.target;\n\n            // How far you can dolly in and out\n            this.minDistance = 1; //probably should never be 0\n            this.maxDistance = 100;\n\n            // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n            // Set to false to disable zooming\n            this.enableZoom = true;\n            this.zoomSpeed = 6.0;\n            this.zoomDampingAlpha = 0.1;\n            this.initialZoom = 0; //start zoomed all the way out unless set in options.\n\n            // Set to false to disable panning\n            this.enablePan = true;\n            this.keyPanSpeed = 12.0;\t// pixels moved per arrow key push\n            this.panDampingAlpha = 0.1;\n\n            // Set to false to disable use of the keys\n            this.enableKeys = true;\n\n            // The four arrow keys\n            this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n            // Mouse buttons\n            this.mouseButtons = { ZOOM: MOUSE.MIDDLE, PAN: MOUSE.LEFT };\n            \n            //Copy options from parameters\n            Object.assign(this, options);\n            let isTargetValid = false;\n\n            if(this.mode === undefined){\n                throw new Error('\\'mode\\' option must be set to either \\'plane\\' or \\'sphere\\'');\n            }\n\n            switch(this.mode){\n                case 'plane':\n                    isTargetValid = (this.target.normal !== undefined && this.target.constant !== undefined);\n                    break;\n                case 'sphere':\n                    isTargetValid = (this.target.center !== undefined && this.target.radius !== undefined);\n                    break;\n            }\n\n            if(!isTargetValid){\n                throw new Error('\\'target\\' option must be an instance of type THREE.Plane or THREE.Sphere');\n            }\n\n            // for reset\n            this.target0 = this.target.clone();\n            this.position0 = this.camera.position.clone();\n            this.zoom0 = this.camera.zoom;\n\n            this._mouse = new Vector2();\n\n            this._finalTargetDistance;\n            this._currentTargetDistance;\n\n            this._changeEvent = { type: 'change' };\n            this._startEvent = { type: 'start' };\n            this._endEvent = { type: 'end' };\n\n            this._STATES = { NONE : - 1, DOLLY : 1, PAN : 2, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n            this._state = this._STATES.NONE;\n\n            this._panTarget = new Vector3();\n            this._panCurrent = new Vector3();\n\n            this._minZoomPosition = new Vector3();\n            this._maxZoomPosition = new Vector3();\n\n            this._panStart = new Vector2();\n            this._panEnd = new Vector2();\n            this._panDelta = new Vector2();\n\n            this._dollyStart = new Vector2();\n            this._dollyEnd = new Vector2();\n            this._dollyDelta = new Vector2();\n\n            this._camOrientation = new Vector2();\n            this._lastMouse = new Vector2();\n\n            this._zoomAlpha;\n\n            this._screenWorldXform = Math.tan( ( this.camera.fov / 2 ) * Math.PI / 180.0 );\n\n            this._init();\n        }\n\n        _init (){\n            if(this.target.distanceToPoint(this.camera.position) == 0){\n                throw new Error(\"ORIENTATION_UNKNOWABLE: initial Camera position cannot intersect target plane.\");\n            }\n\n            //establish initial camera orientation based on position w.r.t. _this.target plane\n            this._straightDollyTrack();\n\n            this.camera.position.lerpVectors(this._minZoomPosition, this._maxZoomPosition, this.initialZoom);\n            this._finalTargetDistance = this._currentTargetDistance = Math.abs(this.target.distanceToPoint(this.camera.position));\n\n            this.camera.lookAt(this._maxZoomPosition); //set the orientation of the camera towards the map.\n            this._camOrientation = this._maxZoomPosition.clone().sub(this.camera.position).normalize();\n\n            this._updateZoomAlpha();\n\n            //Assign event listeners\n\n            this.domElement.addEventListener( 'contextmenu', this._onContextMenu.bind(this), false );\n\n            this.domElement.addEventListener( 'mousedown', this._onMouseDown.bind(this), false );\n            this.domElement.addEventListener( 'mousewheel', this._onMouseWheel.bind(this), false );\n            this.domElement.addEventListener( 'MozMousePixelScroll', this._onMouseWheel.bind(this), false ); // firefox\n\n            this.domElement.addEventListener( 'touchstart', this._onTouchStart.bind(this), false );\n            this.domElement.addEventListener( 'touchend', this._onTouchEnd.bind(this), false );\n            this.domElement.addEventListener( 'touchmove', this._onTouchMove.bind(this), false );\n\n            this.domElement.addEventListener( 'keydown', this._onKeyDown.bind(this), false );\n\n\n            this.update();\n        }\n\n        _intersectCameraTarget(){\n            let intersection, ray;\n\n            switch(this.mode){\n                case 'plane':\n                    [-1, 1].forEach((orientation) => {\n                        if(intersection)\n                            return;\n\n                        ray = new Ray(this.camera.position, this.target.normal.clone().multiplyScalar(orientation));\n                        intersection = ray.intersectPlane(this.target);\n                    });\n                    break;\n                case 'sphere':\n                    ray = new Ray(this.camera.position, (new Vector3()).subVectors(this.target.center, this.camera.position));\n                    intersection = ray.intersectSphere(this.target);\n                    break;\n            }\n\n            return {\n                intersection: intersection,\n                ray: ray\n            }\n        }\n\n        _straightDollyTrack(){\n            this._updateDollyTrack(this._intersectCameraTarget().ray);\n        }\n\n        getZoomAlpha () {\n            return this._zoomAlpha;\n        }\n\n        reset () {\n\n            this.target.copy( this.target0 );\n            this.camera.position.copy( this.position0 );\n            this.camera.zoom = this.zoom0;\n\n            this.camera.updateProjectionMatrix();\n\n            this._init(); //reinit\n\n            this.dispatchEvent( this._changeEvent );\n\n            this.update();\n\n            this._state = this._STATES.NONE;\n\n        };\n\n        // this method is exposed, but perhaps it would be better if we can make it private...\n        update () {\n            var panDelta = new Vector3();\n            var oldPanCurrent = new Vector3();\n            var position = this.camera.position;\n\n            // move target to panned location\n            oldPanCurrent.copy(this._panCurrent);\n            this._panCurrent.lerp( this._panTarget, this.panDampingAlpha );\n            panDelta.subVectors(this._panCurrent, oldPanCurrent);\n\n            switch (this.mode) {\n                case 'plane':\n                    this._maxZoomPosition.add(panDelta);\n                    this._minZoomPosition.add(panDelta);\n                    break;\n                case 'sphere':\n                    const v = new Vector3();\n                    const quat = new Quaternion();\n\n                    quat.setFromAxisAngle(v.setFromMatrixColumn( this.camera.matrix, 1 ), panDelta.x);\n\n                    this._maxZoomPosition.applyQuaternion(quat);\n                    this._minZoomPosition.applyQuaternion(quat);\n\n                    quat.setFromAxisAngle(v.setFromMatrixColumn( this.camera.matrix, 0 ), panDelta.y);\n\n                    this._maxZoomPosition.applyQuaternion(quat);\n                    this._minZoomPosition.applyQuaternion(quat);\n\n                    break;\n            }\n\n            position.lerpVectors(this._minZoomPosition, this._maxZoomPosition, this._updateZoomAlpha());\n\n            if(this.mode == 'sphere'){\n                this.camera.lookAt(this.target.center);\n            }\n        }\n\n        dispose () {\n            this.domElement.removeEventListener( 'contextmenu', this._onContextMenu, false );\n            this.domElement.removeEventListener( 'mousedown', this._onMouseDown, false );\n            this.domElement.removeEventListener( 'mousewheel', this._onMouseWheel, false );\n            this.domElement.removeEventListener( 'MozMousePixelScroll', this._onMouseWheel, false ); // firefox\n\n            this.domElement.removeEventListener( 'touchstart', this._onTouchStart, false );\n            this.domElement.removeEventListener( 'touchend', this._onTouchEnd, false );\n            this.domElement.removeEventListener( 'touchmove', this._onTouchMove, false );\n\n            document.removeEventListener( 'mousemove', this._onMouseMove, false );\n            document.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n            this.domElement.removeEventListener( 'keydown', this._onKeyDown, false );\n        };\n\n        zoomToFit (mesh, center, width, height){\n            //if only width is passed interpret it as radius and set height equal to width\n            center = center || mesh.geometry.boundingSphere.center;\n            width = width || (mesh.geometry.boundingSphere.radius * 2);\n\n            if(height === undefined)\n                height = width;\n\n            this._panTarget.copy(mesh.localToWorld(center.clone()));\n            this._panCurrent.copy(this._intersectCameraTarget().intersection);\n\n            this._straightDollyTrack();\n\n            var vFOV = this.camera.fov * (Math.PI / 180);\n            var hFOV = 2 * Math.atan( Math.tan( vFOV / 2 ) * this.camera.aspect );\n            var obj_aspect = width / height;\n\n            this._finalTargetDistance = ((((obj_aspect > this.camera.aspect)? width : height) / 2) / Math.tan(((obj_aspect > this.camera.aspect)? hFOV : vFOV) / 2));\n\n\n        };\n\n        //returns a bounding box denoting the visible target area\n        targetAreaVisible(){\n\n            let bbox, vOffset, hOffset, center;\n\n            switch(this.mode){\n                case 'plane':\n                    var r = new Ray(this.camera.position, this._camOrientation);\n                    var depth = r.distanceToPlane(this.target);\n\n                    center = this.camera.position.clone();\n\n                    vOffset = this._screenWorldXform * depth;\n                    hOffset = vOffset * this.camera.aspect;\n\n                    bbox = new Box2(\n                        new Vector2(center.x - hOffset, center.y - vOffset),\n                        new Vector2(center.x + hOffset, center.y + vOffset)\n                    );\n\n                    break;\n                case 'sphere':\n\n                    const cameraOriginDist = ((new Vector3()).subVectors(this.target.center, this.camera.position));\n                    const halfPi = Math.PI / 2;\n\n                    center = new Vector2(\n                        cameraOriginDist.angleTo(new Vector3(1,0,0)),\n                        cameraOriginDist.angleTo(new Vector3(0,1,0))\n                    );\n\n                    center.x = (this.camera.position.z < 0)? (2*Math.PI - center.x) : center.x;\n\n                    const d = cameraOriginDist.length();\n\n                    vOffset = this._screenWorldXform * ((d / this.target.radius) - 1);\n                    vOffset = Math.min(vOffset, halfPi);\n\n                    hOffset = vOffset * this.camera.aspect;\n                    hOffset = Math.min(hOffset, halfPi);\n\n                    bbox = new Box2(\n                        new Vector2(center.x - hOffset - halfPi, center.y - vOffset - halfPi),\n                        new Vector2(center.x + hOffset - halfPi, center.y + vOffset - halfPi)\n                    );\n\n                    ['min', 'max'].forEach(_mm => {\n                        bbox[_mm].x = (bbox[_mm].x > Math.PI)? (-2*Math.PI + bbox[_mm].x): bbox[_mm].x;\n                    });\n\n                    break;\n            };\n\n            return bbox;\n        }\n\n        _updateZoomAlpha(){\n            this._finalTargetDistance = Math.max( this.minDistance, Math.min( this.maxDistance, this._finalTargetDistance ) );\n            var diff = this._currentTargetDistance - this._finalTargetDistance;\n            var damping_alpha = this.zoomDampingAlpha;\n            this._currentTargetDistance -= diff * damping_alpha;\n            var rounding_places = 100000;\n            this._zoomAlpha = Math.abs(Math.round((1 - ((this._currentTargetDistance - this.minDistance) / (this.maxDistance - this.minDistance))) * rounding_places ) / rounding_places);\n\n            return this._zoomAlpha;\n        }\n\n        _updateDollyTrack(ray){\n            let intersect;\n\n            switch(this.mode){\n                case 'plane':\n                    intersect = ray.intersectPlane(this.target);\n                    break;\n                case 'sphere':\n                    intersect = ray.intersectSphere(this.target);\n                    break;\n            }\n\n            if(intersect){\n                this._maxZoomPosition.addVectors(intersect, new Vector3().subVectors(this.camera.position, intersect).normalize().multiplyScalar(this.minDistance));\n                this._minZoomPosition.copy(this._calculateMinZoom(this.camera.position, intersect));\n\n                this._finalTargetDistance = this._currentTargetDistance = intersect.clone().sub(this.camera.position).length();\n            }\n        }\n\n        _getZoomScale() {\n            return Math.pow( 0.95, this.zoomSpeed );\n        }\n\n\n        _panLeft( distance, cameraMatrix ) {\n            var v = new Vector3();\n\n            switch(this.mode){\n                case 'sphere':\n                    v.set(- distance, 0, 0);\n                    break;\n                case 'plane':\n                    v.setFromMatrixColumn( cameraMatrix, 0 ); // get Y column of cameraMatrix\n                    v.multiplyScalar( - distance );\n                    break;\n            }\n\n            this._panTarget.add( v );\n        }\n\n        _panUp ( distance, cameraMatrix ) {\n            var v = new Vector3();\n\n            switch(this.mode){\n                case 'sphere':\n                    v.set(0, - distance, 0);\n                    break;\n                case 'plane':\n                    v.setFromMatrixColumn( cameraMatrix, 1 ); // get Y column of cameraMatrix\n                    v.multiplyScalar( distance );\n                    break;\n            }\n\n            this._panTarget.add( v );\n        }\n\n        // deltaX and deltaY are in pixels; right and down are positive\n        _pan (deltaX, deltaY) {\n            var element = this.domElement === document ? this.domElement.body : this.domElement;\n\n            var r = new Ray(this.camera.position, this._camOrientation);\n            var targetDistance;\n\n            switch(this.mode){\n                case 'plane':\n                    targetDistance = this._screenWorldXform * r.distanceToPlane(this.target);\n                    break;\n                case 'sphere':\n                    //in spherical mode the pan coords are saved as radians and used as rotation angles\n                    const camToTarget = (new Vector3()).subVectors(this.camera.position, this.target.center);\n                    targetDistance = this._screenWorldXform * ((camToTarget.length() / this.target.radius) - 1);\n                    break;\n            }\n\n            // we actually don't use screenWidth, since perspective camera is fixed to screen height\n            this._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.camera.matrix );\n            this._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.camera.matrix );\n\n        }\n\n        _dollyIn( dollyScale ) {\n            if ( this._cameraOfKnownType() ) {\n                this._finalTargetDistance /= dollyScale;\n            } else {\n                console.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n                this.enableZoom = false;\n            }\n        }\n\n        _dollyOut( dollyScale ) {\n            if ( this._cameraOfKnownType() ) {\n                this._finalTargetDistance *= dollyScale;\n            } else {\n                console.warn( 'WARNING: MapControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n                this.enableZoom = false;\n            }\n        }\n\n        _cameraOfKnownType() {\n            return this.camera.type === 'PerspectiveCamera'\n        }\n\n        _handleUpdateDollyTrackMouse(event){\n            var prevMouse = this._mouse.clone();\n            this._mouse.set(( event.offsetX / this.domElement.clientWidth ) * 2 - 1, - ( event.offsetY / this.domElement.clientHeight ) * 2 + 1);\n\n            if(!prevMouse.equals(this._mouse)){\n                var rc = new Raycaster();\n                rc.setFromCamera(this._mouse, this.camera);\n                this._updateDollyTrack(rc.ray);\n            }\n        }\n\n        _handleMouseDownDolly( event ) {\n            this._handleUpdateDollyTrackMouse(event);\n            this._dollyStart.set( event.offsetX, event.offsetY );\n        }\n\n        _handleMouseDownPan( event ) {\n\n            this._panStart.set( event.offsetX, event.offsetY );\n\n        }\n\n        _handleMouseMoveDolly( event ) {\n\n            this._handleUpdateDollyTrackMouse(event);\n\n            //console.log( 'handleMouseMoveDolly' );\n\n            this._dollyEnd.set( event.offsetX, event.offsetY );\n\n            this._dollyDelta.subVectors(this._dollyEnd, this._dollyStart );\n\n            if ( this._dollyDelta.y > 0 ) {\n\n                this._dollyIn( this._getZoomScale() );\n\n            } else if ( this._dollyDelta.y < 0 ) {\n\n                this._dollyOut( this._getZoomScale() );\n\n            }\n\n            this._dollyStart.copy( this._dollyEnd );\n\n            this.update();\n\n        }\n\n        _handleMouseMovePan( event ) {\n\n            //console.log( 'handleMouseMovePan' );\n\n            this._panEnd.set( event.offsetX, event.offsetY );\n\n            this._panDelta.subVectors( this._panEnd, this._panStart );\n\n            this._pan( this._panDelta.x, this._panDelta.y );\n\n            this._panStart.copy( this._panEnd );\n\n            this.update();\n\n        }\n\n        _handleMouseUp( event ) {\n\n            //console.log( 'handleMouseUp' );\n\n        }\n\n        _calculateMinZoom(cam_pos, map_intersect){\n            return map_intersect.clone().add(\n                cam_pos.clone()\n                .sub(map_intersect)\n                .normalize()\n                .multiplyScalar(this.maxDistance)\n            );\n        }\n\n\n        _handleMouseWheel( event ) {\n            this._handleUpdateDollyTrackMouse(event);\n\n            var delta = 0;\n\n            if ( event.wheelDelta !== undefined ) {\n\n                // WebKit / Opera / Explorer 9\n\n                delta = event.wheelDelta;\n\n            } else if ( event.detail !== undefined ) {\n\n                // Firefox\n\n                delta = - event.detail;\n\n            }\n\n            if ( delta > 0 ) {\n                this._dollyOut( this._getZoomScale() );\n            } else if ( delta < 0 ) {\n                this._dollyIn( this._getZoomScale() );\n            }\n\n            this.update();\n        }\n\n        _handleKeyDown( event ) {\n\n            //console.log( 'handleKeyDown' );\n\n            switch ( event.keyCode ) {\n\n                case this.keys.UP:\n                    this._pan( 0, this.keyPanSpeed );\n                    this.update();\n                    break;\n\n                case this.keys.BOTTOM:\n                    this._pan( 0, - this.keyPanSpeed );\n                    this.update();\n                    break;\n\n                case this.keys.LEFT:\n                    this._pan( this.keyPanSpeed, 0 );\n                    this.update();\n                    break;\n\n                case this.keys.RIGHT:\n                    this._pan( - this.keyPanSpeed, 0 );\n                    this.update();\n                    break;\n\n            }\n        }\n\n        _handleUpdateDollyTrackTouch( event ){\n            var centerpoint = new Vector2();\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            centerpoint.x = event.touches[ 0 ].pageX + (dx / 2);\n            centerpoint.y = event.touches[ 0 ].pageY + (dy / 2);\n\n            var mouse = new Vector2();\n            mouse.x = ( centerpoint.x / domElement.clientWidth ) * 2 - 1;\n            mouse.y = - ( centerpoint.y / domElement.clientHeight ) * 2 + 1;\n\n            this._updateDollyTrack(mouse);\n        }\n\n        _handleTouchStartDolly( event ) {\n            this._handleUpdateDollyTrackTouch(event);\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            var distance = Math.sqrt( dx * dx + dy * dy );\n\n            this._dollyStart.set( 0, distance );\n\n        }\n\n        _handleTouchStartPan( event ) {\n\n            //console.log( 'handleTouchStartPan' );\n\n            this._panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n        }\n\n\n        _handleTouchMoveDolly( event ) {\n            this._handleUpdateDollyTrackTouch(event);\n\n            //console.log( 'handleTouchMoveDolly' );\n\n            var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n            var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n            var distance = Math.sqrt( dx * dx + dy * dy );\n\n            this._dollyEnd.set( 0, distance );\n\n            this._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n            if ( this._dollyDelta.y > 0 ) {\n\n                this._dollyOut( this._getZoomScale() );\n\n            } else if ( this._dollyDelta.y < 0 ) {\n\n                this._dollyIn( this._getZoomScale() );\n\n            }\n\n            this._dollyStart.copy( this._dollyEnd );\n\n            this.update();\n\n        }\n\n        _handleTouchMovePan( event ) {\n\n            this._panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n            this._panDelta.subVectors( this._panEnd, this._panStart );\n\n            this._pan( this._panDelta.x, this._panDelta.y );\n\n            this._panStart.copy( this._panEnd );\n\n            this.update();\n\n        }\n\n        _handleTouchEnd( event ) {\n            //console.log( 'handleTouchEnd' );\n        }\n\n        //\n        // event handlers - FSM: listen for events and reset state\n        //\n\n        _onMouseDown( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n\n            if ( event.button === this.mouseButtons.ZOOM ) {\n\n                if ( this.enableZoom === false ) return;\n\n                this._handleMouseDownDolly( event );\n\n                this._state = this._STATES.DOLLY;\n\n            } else if ( event.button === this.mouseButtons.PAN ) {\n\n                if ( this.enablePan === false ) return;\n\n                this._handleMouseDownPan( event );\n\n                this._state = this._STATES.PAN;\n\n            }\n\n            if ( this._state !== this._STATES.NONE ) {\n\n                document.addEventListener( 'mousemove', this._onMouseMove.bind(this), false );\n                document.addEventListener( 'mouseup', this._onMouseUp.bind(this), false );\n\n                this.dispatchEvent( this._startEvent );\n\n            }\n\n        }\n\n        _onMouseMove( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n\n            if ( this._state === this._STATES.DOLLY ) {\n\n                if ( this.enableZoom === false ) return;\n\n                this._handleMouseMoveDolly( event );\n\n            } else if ( this._state === this._STATES.PAN ) {\n\n                if ( this.enablePan === false ) return;\n\n                this._handleMouseMovePan( event );\n            }\n        }\n\n        _onMouseUp( event ) {\n\n            if ( this.enabled === false ) return;\n\n            this._handleMouseUp( event );\n\n            document.removeEventListener( 'mousemove', this._onMouseMove, false );\n            document.removeEventListener( 'mouseup', this._onMouseUp, false );\n\n            this.dispatchEvent( this._endEvent );\n\n            this._state = this._STATES.NONE;\n\n        }\n\n        _onMouseWheel( event ) {\n            if ( this.enabled === false || this.enableZoom === false || ( this._state !== this._STATES.NONE ) ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            this._handleMouseWheel( event );\n\n            this.dispatchEvent( this._startEvent ); // not sure why these are here...\n            this.dispatchEvent( this._endEvent );\n\n        }\n\n        _onKeyDown( event ) {\n\n            if ( this.enabled === false || this.enableKeys === false || this.enablePan === false ) return;\n\n            this._handleKeyDown( event );\n\n        }\n\n        _onTouchStart( event ) {\n\n            if ( this.enabled === false ) return;\n\n            switch ( event.touches.length ) {\n                case 1: // three-fingered touch: pan\n\n                    if ( this.enablePan === false ) return;\n\n                    this._handleTouchStartPan( event );\n\n                    this._state = this._STATES.TOUCH_PAN;\n\n                    break;\n\n                case 2:\t// two-fingered touch: dolly\n\n                    if ( this.enableZoom === false ) return;\n\n                    this._handleTouchStartDolly( event );\n\n                    this._state = this._STATES.TOUCH_DOLLY;\n\n                    break;\n\n                default:\n\n                    this._state = this._STATES.NONE;\n\n            }\n\n            if ( this._state !== this._STATES.NONE ) {\n\n                this.dispatchEvent( this._startEvent );\n\n            }\n\n        }\n\n        _onTouchMove( event ) {\n\n            if ( this.enabled === false ) return;\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            switch ( event.touches.length ) {\n\n                case 1: // one-fingered touch: pan\n                    if ( this.enablePan === false ) return;\n                    if ( this._state !== this._STATES.TOUCH_PAN ) return; // is this needed?...\n\n                    this._handleTouchMovePan( event );\n\n                    break;\n\n                case 2: // two-fingered touch: dolly\n\n                    if ( this.enableZoom === false ) return;\n                    if ( this._state !== this._STATES.TOUCH_DOLLY ) return; // is this needed?...\n\n                    this._handleTouchMoveDolly( event );\n\n                    break;\n\n                default:\n\n                    this._state = this._STATES.NONE;\n\n            }\n\n        }\n\n        _onTouchEnd( event ) {\n\n            if ( this.enabled === false ) return;\n\n            this._handleTouchEnd( event );\n\n            this.dispatchEvent( this._endEvent );\n\n            this._state = this._STATES.NONE;\n\n        }\n\n        _onContextMenu( event ) {\n            event.preventDefault();\n        }\n\n};\n\nif(window && window.THREE){\n    window.THREE.MapControls = MapControls;\n}\n\nexport default MapControls;\n"],"sourceRoot":""}